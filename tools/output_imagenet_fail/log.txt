[02/24 16:23:32] detectron2 INFO: Rank of current process: 0. World size: 1
[02/24 16:23:32] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------
sys.platform            linux
Python                  3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]
numpy                   1.24.2
detectron2              0.6 @/home/nahyun/.local/lib/python3.10/site-packages/detectron2
Compiler                GCC 11.3
CUDA compiler           not available
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.13.1+cu117 @/home/nahyun/.local/lib/python3.10/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
GPU 1                   NVIDIA GeForce RTX 3080 Ti (arch=8.6)
Driver version          525.78.01
CUDA_HOME               None - invalid!
Pillow                  9.0.1
torchvision             0.14.1+cu117 @/home/nahyun/.local/lib/python3.10/site-packages/torchvision
torchvision arch flags  /home/nahyun/.local/lib/python3.10/site-packages/torchvision/_C.so
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  --------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[02/24 16:23:32] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/COCO-Detection/retinanet_R_50_FPN_3x.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[])
[02/24 16:23:32] detectron2 INFO: Contents of args.config_file=../configs/COCO-Detection/retinanet_R_50_FPN_3x.yaml:
_BASE_: "../Base-RetinaNet.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  RESNETS:
    DEPTH: 50
SOLVER:
  STEPS: (210000, 250000)
  MAX_ITER: 270000

[02/24 16:23:32] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_val
  TRAIN:
  - coco_2017_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 640
  - 672
  - 704
  - 736
  - 768
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
    - - 64
    - - 128
    - - 256
    - - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: FastRCNNConvFCHead
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    - p6
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.02
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 270000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 210000
  - 250000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[02/24 16:23:32] detectron2 INFO: Full config saved to ./output/config.yaml
[02/24 16:23:33] d2.utils.env INFO: Using a generated random seed 33313269
[02/24 16:23:34] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
  )
)
[02/24 16:23:36] d2.data.datasets.coco INFO: Loading /media/nahyun/HDD//data_100/instances_train.json takes 2.24 seconds.
[02/24 16:23:36] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[02/24 16:23:36] d2.data.datasets.coco INFO: Loaded 19191 images in COCO format from /media/nahyun/HDD//data_100/instances_train.json
[02/24 16:23:38] d2.data.build INFO: Removed 0 images with no usable annotations. 19191 images left.
[02/24 16:23:38] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[02/24 16:23:38] d2.data.build INFO: Using training sampler TrainingSampler
[02/24 16:23:38] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[02/24 16:23:38] d2.data.common INFO: Serializing 19191 elements to byte tensors and concatenating them all ...
[02/24 16:23:38] d2.data.common INFO: Serialized dataset takes 80.55 MiB
[02/24 16:23:38] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[02/24 16:23:38] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[02/24 16:23:38] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/nahyun/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[02/24 16:23:38] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[02/24 16:23:38] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[02/24 16:23:38] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral2.{bias, weight}[0m
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output2.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_head.fc1.{bias, weight}[0m
[34mroi_heads.box_head.fc2.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[02/24 16:23:38] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[02/24 16:23:38] d2.engine.train_loop INFO: Starting training from iteration 0
[02/24 16:23:40] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 277, in run_step
    loss_dict = self.model(data)
  File "/home/nahyun/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 167, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/home/nahyun/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 739, in forward
    losses = self._forward_box(features, proposals)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 804, in _forward_box
    losses = self.box_predictor.losses(predictions, proposals)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/fast_rcnn.py", line 348, in losses
    "loss_box_reg": self.box_reg_loss(
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/fast_rcnn.py", line 434, in box_reg_loss
    fg_inds = nonzero_tuple((gt_classes >= 0) & (gt_classes < self.num_classes))[0]
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/layers/wrappers.py", line 139, in nonzero_tuple
    return x.nonzero(as_tuple=True)
RuntimeError: numel: integer multiplication overflow
[02/24 16:23:40] d2.engine.hooks INFO: Total training time: 0:00:01 (0:00:00 on hooks)
[02/24 16:23:40] d2.utils.events INFO:  iter: 0     lr: N/A  max_mem: 8240M
[02/24 16:38:13] detectron2 INFO: Rank of current process: 0. World size: 1
[02/24 16:38:13] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------
sys.platform            linux
Python                  3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]
numpy                   1.24.2
detectron2              0.6 @/home/nahyun/.local/lib/python3.10/site-packages/detectron2
Compiler                GCC 11.3
CUDA compiler           not available
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.13.1+cu117 @/home/nahyun/.local/lib/python3.10/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
GPU 1                   NVIDIA GeForce RTX 3080 Ti (arch=8.6)
Driver version          525.78.01
CUDA_HOME               None - invalid!
Pillow                  9.0.1
torchvision             0.14.1+cu117 @/home/nahyun/.local/lib/python3.10/site-packages/torchvision
torchvision arch flags  /home/nahyun/.local/lib/python3.10/site-packages/torchvision/_C.so
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  --------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[02/24 16:38:13] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/COCO-Detection/retinanet_R_50_FPN_3x.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[])
[02/24 16:38:13] detectron2 INFO: Contents of args.config_file=../configs/COCO-Detection/retinanet_R_50_FPN_3x.yaml:
_BASE_: "../Base-RetinaNet.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  RESNETS:
    DEPTH: 50
SOLVER:
  STEPS: (210000, 250000)
  MAX_ITER: 270000

[02/24 16:38:13] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_val
  TRAIN:
  - coco_2017_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 640
  - 672
  - 704
  - 736
  - 768
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
    - - 64
    - - 128
    - - 256
    - - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: FastRCNNConvFCHead
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    - p6
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.02
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 270000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 210000
  - 250000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[02/24 16:38:13] detectron2 INFO: Full config saved to ./output/config.yaml
[02/24 16:38:13] d2.utils.env INFO: Using a generated random seed 14181533
[02/24 16:38:15] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
  )
)
[02/24 16:38:17] d2.data.datasets.coco INFO: Loading /media/nahyun/HDD//data_100/instances_train.json takes 2.23 seconds.
[02/24 16:38:17] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[02/24 16:38:17] d2.data.datasets.coco INFO: Loaded 19191 images in COCO format from /media/nahyun/HDD//data_100/instances_train.json
[02/24 16:38:18] d2.data.build INFO: Removed 0 images with no usable annotations. 19191 images left.
[02/24 16:38:18] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[02/24 16:38:18] d2.data.build INFO: Using training sampler TrainingSampler
[02/24 16:38:18] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[02/24 16:38:18] d2.data.common INFO: Serializing 19191 elements to byte tensors and concatenating them all ...
[02/24 16:38:19] d2.data.common INFO: Serialized dataset takes 80.55 MiB
[02/24 16:38:19] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[02/24 16:38:19] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[02/24 16:38:19] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/nahyun/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[02/24 16:38:19] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[02/24 16:38:19] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[02/24 16:38:19] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral2.{bias, weight}[0m
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output2.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_head.fc1.{bias, weight}[0m
[34mroi_heads.box_head.fc2.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[02/24 16:38:19] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[02/24 16:38:19] d2.engine.train_loop INFO: Starting training from iteration 0
[02/24 16:38:20] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 277, in run_step
    loss_dict = self.model(data)
  File "/home/nahyun/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 167, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/home/nahyun/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 739, in forward
    losses = self._forward_box(features, proposals)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 804, in _forward_box
    losses = self.box_predictor.losses(predictions, proposals)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/fast_rcnn.py", line 348, in losses
    "loss_box_reg": self.box_reg_loss(
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/fast_rcnn.py", line 434, in box_reg_loss
    fg_inds = nonzero_tuple((gt_classes >= 0) & (gt_classes < self.num_classes))[0]
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/layers/wrappers.py", line 139, in nonzero_tuple
    return x.nonzero(as_tuple=True)
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
[02/24 16:38:20] d2.engine.hooks INFO: Total training time: 0:00:01 (0:00:00 on hooks)
[02/24 16:38:20] d2.utils.events INFO:  iter: 0     lr: N/A  max_mem: 8240M
[02/24 16:38:52] detectron2 INFO: Rank of current process: 0. World size: 1
[02/24 16:38:52] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------
sys.platform            linux
Python                  3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]
numpy                   1.24.2
detectron2              0.6 @/home/nahyun/.local/lib/python3.10/site-packages/detectron2
Compiler                GCC 11.3
CUDA compiler           not available
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.13.1+cu117 @/home/nahyun/.local/lib/python3.10/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
GPU 1                   NVIDIA GeForce RTX 3080 Ti (arch=8.6)
Driver version          525.78.01
CUDA_HOME               None - invalid!
Pillow                  9.0.1
torchvision             0.14.1+cu117 @/home/nahyun/.local/lib/python3.10/site-packages/torchvision
torchvision arch flags  /home/nahyun/.local/lib/python3.10/site-packages/torchvision/_C.so
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  --------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[02/24 16:38:52] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/COCO-Detection/retinanet_R_50_FPN_3x.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[])
[02/24 16:38:52] detectron2 INFO: Contents of args.config_file=../configs/COCO-Detection/retinanet_R_50_FPN_3x.yaml:
_BASE_: "../Base-RetinaNet.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  RESNETS:
    DEPTH: 50
SOLVER:
  STEPS: (210000, 250000)
  MAX_ITER: 270000

[02/24 16:38:52] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_val
  TRAIN:
  - coco_2017_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 640
  - 672
  - 704
  - 736
  - 768
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
    - - 64
    - - 128
    - - 256
    - - 512
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: GeneralizedRCNN
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: FastRCNNConvFCHead
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 2
    POOLER_RESOLUTION: 7
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: StandardROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 4
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    - p6
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 1000
    PRE_NMS_TOPK_TEST: 1000
    PRE_NMS_TOPK_TRAIN: 2000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.02
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 270000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 210000
  - 250000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[02/24 16:38:52] detectron2 INFO: Full config saved to ./output/config.yaml
[02/24 16:38:52] d2.utils.env INFO: Using a generated random seed 53261574
[02/24 16:38:54] d2.engine.defaults INFO: Model:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=81, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=320, bias=True)
    )
  )
)
[02/24 16:38:56] d2.data.datasets.coco INFO: Loading /media/nahyun/HDD//data_100/instances_train.json takes 2.23 seconds.
[02/24 16:38:56] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[02/24 16:38:56] d2.data.datasets.coco INFO: Loaded 19191 images in COCO format from /media/nahyun/HDD//data_100/instances_train.json
[02/24 16:38:58] d2.data.build INFO: Removed 0 images with no usable annotations. 19191 images left.
[02/24 16:38:58] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[02/24 16:38:58] d2.data.build INFO: Using training sampler TrainingSampler
[02/24 16:38:58] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[02/24 16:38:58] d2.data.common INFO: Serializing 19191 elements to byte tensors and concatenating them all ...
[02/24 16:38:58] d2.data.common INFO: Serialized dataset takes 80.55 MiB
[02/24 16:38:58] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[02/24 16:38:58] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[02/24 16:38:58] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/nahyun/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[02/24 16:38:58] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[02/24 16:38:58] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[02/24 16:38:58] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral2.{bias, weight}[0m
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output2.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mproposal_generator.rpn_head.anchor_deltas.{bias, weight}[0m
[34mproposal_generator.rpn_head.conv.{bias, weight}[0m
[34mproposal_generator.rpn_head.objectness_logits.{bias, weight}[0m
[34mroi_heads.box_head.fc1.{bias, weight}[0m
[34mroi_heads.box_head.fc2.{bias, weight}[0m
[34mroi_heads.box_predictor.bbox_pred.{bias, weight}[0m
[34mroi_heads.box_predictor.cls_score.{bias, weight}[0m
[02/24 16:38:58] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[02/24 16:38:58] d2.engine.train_loop INFO: Starting training from iteration 0
[02/24 16:38:59] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 149, in train
    self.run_step()
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/engine/defaults.py", line 494, in run_step
    self._trainer.run_step()
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/engine/train_loop.py", line 277, in run_step
    loss_dict = self.model(data)
  File "/home/nahyun/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/meta_arch/rcnn.py", line 167, in forward
    _, detector_losses = self.roi_heads(images, features, proposals, gt_instances)
  File "/home/nahyun/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1194, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 739, in forward
    losses = self._forward_box(features, proposals)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/roi_heads.py", line 804, in _forward_box
    losses = self.box_predictor.losses(predictions, proposals)
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/fast_rcnn.py", line 348, in losses
    "loss_box_reg": self.box_reg_loss(
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/modeling/roi_heads/fast_rcnn.py", line 434, in box_reg_loss
    fg_inds = nonzero_tuple((gt_classes >= 0) & (gt_classes < self.num_classes))[0]
  File "/home/nahyun/.local/lib/python3.10/site-packages/detectron2/layers/wrappers.py", line 139, in nonzero_tuple
    return x.nonzero(as_tuple=True)
RuntimeError: numel: integer multiplication overflow
[02/24 16:38:59] d2.engine.hooks INFO: Total training time: 0:00:01 (0:00:00 on hooks)
[02/24 16:38:59] d2.utils.events INFO:  iter: 0     lr: N/A  max_mem: 6895M
[02/24 18:59:19] detectron2 INFO: Rank of current process: 0. World size: 1
[02/24 18:59:19] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------
sys.platform            linux
Python                  3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]
numpy                   1.24.2
detectron2              0.6 @/home/nahyun/.local/lib/python3.10/site-packages/detectron2
Compiler                GCC 11.3
CUDA compiler           not available
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.13.1+cu117 @/home/nahyun/.local/lib/python3.10/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
GPU 1                   NVIDIA GeForce RTX 3080 Ti (arch=8.6)
Driver version          525.78.01
CUDA_HOME               None - invalid!
Pillow                  9.0.1
torchvision             0.14.1+cu117 @/home/nahyun/.local/lib/python3.10/site-packages/torchvision
torchvision arch flags  /home/nahyun/.local/lib/python3.10/site-packages/torchvision/_C.so
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  --------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[02/24 18:59:19] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/COCO-Detection/retinanet_R_50_FPN_3x.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[])
[02/24 18:59:19] detectron2 INFO: Contents of args.config_file=../configs/COCO-Detection/retinanet_R_50_FPN_3x.yaml:
_BASE_: "../Base-RetinaNet.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  RESNETS:
    DEPTH: 50
SOLVER:
  STEPS: (210000, 250000)
  MAX_ITER: 270000

[02/24 18:59:19] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_val
  TRAIN:
  - coco_2017_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 640
  - 672
  - 704
  - 736
  - 768
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: RetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.0
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 270000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 210000
  - 250000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[02/24 18:59:19] detectron2 INFO: Full config saved to ./output/config.yaml
[02/24 18:59:19] d2.utils.env INFO: Using a generated random seed 20197872
[02/24 18:59:20] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 900, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[02/24 18:59:23] d2.data.datasets.coco INFO: Loading /media/nahyun/HDD//data_100/instances_train.json takes 2.26 seconds.
[02/24 18:59:23] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[02/24 18:59:23] d2.data.datasets.coco INFO: Loaded 19191 images in COCO format from /media/nahyun/HDD//data_100/instances_train.json
[02/24 18:59:24] d2.data.build INFO: Removed 0 images with no usable annotations. 19191 images left.
[02/24 18:59:24] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[02/24 18:59:24] d2.data.build INFO: Using training sampler TrainingSampler
[02/24 18:59:24] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[02/24 18:59:24] d2.data.common INFO: Serializing 19191 elements to byte tensors and concatenating them all ...
[02/24 18:59:25] d2.data.common INFO: Serialized dataset takes 80.55 MiB
[02/24 18:59:25] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[02/24 18:59:25] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[02/24 18:59:25] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/nahyun/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[02/24 18:59:25] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[02/24 18:59:25] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[02/24 18:59:25] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[02/24 18:59:25] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[02/24 18:59:25] d2.engine.train_loop INFO: Starting training from iteration 0
[02/24 18:59:39] d2.utils.events INFO:  eta: 1:00:27  iter: 19  total_loss: 2.768  loss_cls: 1.738  loss_box_reg: 1.03  time: 0.6303  last_time: 0.6031  data_time: 0.0412  last_data_time: 0.0279   lr: 0.00019981  max_mem: 15356M
[02/24 18:59:51] d2.utils.events INFO:  eta: 1:00:31  iter: 39  total_loss: 1.903  loss_cls: 1.2  loss_box_reg: 0.703  time: 0.6170  last_time: 0.6232  data_time: 0.0354  last_data_time: 0.0462   lr: 0.00039961  max_mem: 15356M
[02/24 19:00:02] d2.engine.hooks INFO: Overall training speed: 57 iterations in 0:00:35 (0.6174 s / it)
[02/24 19:00:02] d2.engine.hooks INFO: Total training time: 0:00:35 (0:00:00 on hooks)
[02/24 19:00:02] d2.utils.events INFO:  eta: 1:00:25  iter: 59  total_loss: 1.853  loss_cls: 1.189  loss_box_reg: 0.6647  time: 0.6131  last_time: 0.5848  data_time: 0.0368  last_data_time: 0.0440   lr: 0.00058942  max_mem: 15356M
[02/24 19:00:04] detectron2 INFO: Rank of current process: 0. World size: 1
[02/24 19:00:05] detectron2 INFO: Environment info:
----------------------  --------------------------------------------------------------------------
sys.platform            linux
Python                  3.10.6 (main, Nov 14 2022, 16:10:14) [GCC 11.3.0]
numpy                   1.24.2
detectron2              0.6 @/home/nahyun/.local/lib/python3.10/site-packages/detectron2
Compiler                GCC 11.3
CUDA compiler           not available
DETECTRON2_ENV_MODULE   <not set>
PyTorch                 1.13.1+cu117 @/home/nahyun/.local/lib/python3.10/site-packages/torch
PyTorch debug build     False
GPU available           Yes
GPU 0                   NVIDIA GeForce RTX 3090 (arch=8.6)
GPU 1                   NVIDIA GeForce RTX 3080 Ti (arch=8.6)
Driver version          525.78.01
CUDA_HOME               None - invalid!
Pillow                  9.0.1
torchvision             0.14.1+cu117 @/home/nahyun/.local/lib/python3.10/site-packages/torchvision
torchvision arch flags  /home/nahyun/.local/lib/python3.10/site-packages/torchvision/_C.so
fvcore                  0.1.5.post20221221
iopath                  0.1.9
cv2                     4.7.0
----------------------  --------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

[02/24 19:00:05] detectron2 INFO: Command line arguments: Namespace(config_file='../configs/COCO-Detection/retinanet_R_50_FPN_3x.yaml', resume=False, eval_only=False, num_gpus=1, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:50152', opts=[])
[02/24 19:00:05] detectron2 INFO: Contents of args.config_file=../configs/COCO-Detection/retinanet_R_50_FPN_3x.yaml:
_BASE_: "../Base-RetinaNet.yaml"
MODEL:
  WEIGHTS: "detectron2://ImageNetPretrained/MSRA/R-50.pkl"
  RESNETS:
    DEPTH: 50
SOLVER:
  STEPS: (210000, 250000)
  MAX_ITER: 270000

[02/24 19:00:05] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - coco_2017_val
  TRAIN:
  - coco_2017_train
GLOBAL:
  HACK: 1.0
INPUT:
  CROP:
    ENABLED: false
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  FORMAT: BGR
  MASK_FORMAT: polygon
  MAX_SIZE_TEST: 1333
  MAX_SIZE_TRAIN: 1333
  MIN_SIZE_TEST: 800
  MIN_SIZE_TRAIN:
  - 640
  - 672
  - 704
  - 736
  - 768
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 40.31747359663594
      - 50.79683366298238
    - - 64
      - 80.63494719327188
      - 101.59366732596476
    - - 128
      - 161.26989438654377
      - 203.18733465192952
    - - 256
      - 322.53978877308754
      - 406.37466930385904
    - - 512
      - 645.0795775461751
      - 812.7493386077181
  BACKBONE:
    FREEZE_AT: 2
    NAME: build_retinanet_resnet_fpn_backbone
  DEVICE: cuda
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES:
    - res3
    - res4
    - res5
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_ON: false
  META_ARCHITECTURE: RetinaNet
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 103.53
  - 116.28
  - 123.675
  PIXEL_STD:
  - 1.0
  - 1.0
  - 1.0
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES5_DILATION: 1
    STEM_OUT_CHANNELS: 64
    STRIDE_IN_1X1: true
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.0
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    COMMON_STRIDE: 4
    CONVS_DIM: 128
    IGNORE_VALUE: 255
    IN_FEATURES:
    - p2
    - p3
    - p4
    - p5
    LOSS_WEIGHT: 1.0
    NAME: SemSegFPNHead
    NORM: GN
    NUM_CLASSES: 54
  WEIGHTS: detectron2://ImageNetPretrained/MSRA/R-50.pkl
OUTPUT_DIR: ./output
SEED: -1
SOLVER:
  AMP:
    ENABLED: false
  BASE_LR: 0.01
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: value
    CLIP_VALUE: 1.0
    ENABLED: false
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 16
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 270000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 210000
  - 250000
  WARMUP_FACTOR: 0.001
  WARMUP_ITERS: 1000
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.0001
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 0
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[02/24 19:00:05] detectron2 INFO: Full config saved to ./output/config.yaml
[02/24 19:00:05] d2.utils.env INFO: Using a generated random seed 5701781
[02/24 19:00:06] d2.engine.defaults INFO: Model:
RetinaNet(
  (backbone): FPN(
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelP6P7(
      (p6): Conv2d(2048, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      (p7): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
    )
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (head): RetinaNetHead(
    (cls_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (bbox_subnet): Sequential(
      (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU()
      (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU()
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU()
      (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU()
    )
    (cls_score): Conv2d(256, 900, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (bbox_pred): Conv2d(256, 36, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (anchor_generator): DefaultAnchorGenerator(
    (cell_anchors): BufferList()
  )
)
[02/24 19:00:08] d2.data.datasets.coco INFO: Loading /media/nahyun/HDD//data_100/instances_train.json takes 2.26 seconds.
[02/24 19:00:08] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[02/24 19:00:08] d2.data.datasets.coco INFO: Loaded 19191 images in COCO format from /media/nahyun/HDD//data_100/instances_train.json
[02/24 19:00:10] d2.data.build INFO: Removed 0 images with no usable annotations. 19191 images left.
[02/24 19:00:10] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[02/24 19:00:10] d2.data.build INFO: Using training sampler TrainingSampler
[02/24 19:00:10] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[02/24 19:00:10] d2.data.common INFO: Serializing 19191 elements to byte tensors and concatenating them all ...
[02/24 19:00:10] d2.data.common INFO: Serialized dataset takes 80.55 MiB
[02/24 19:00:10] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[02/24 19:00:10] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from detectron2://ImageNetPretrained/MSRA/R-50.pkl ...
[02/24 19:00:10] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/nahyun/.torch/iopath_cache/detectron2/ImageNetPretrained/MSRA/R-50.pkl ...
[02/24 19:00:10] d2.checkpoint.c2_model_loading INFO: Renaming Caffe2 weights ......
[02/24 19:00:10] d2.checkpoint.c2_model_loading INFO: Following weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[02/24 19:00:10] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.fpn_lateral3.{bias, weight}[0m
[34mbackbone.fpn_lateral4.{bias, weight}[0m
[34mbackbone.fpn_lateral5.{bias, weight}[0m
[34mbackbone.fpn_output3.{bias, weight}[0m
[34mbackbone.fpn_output4.{bias, weight}[0m
[34mbackbone.fpn_output5.{bias, weight}[0m
[34mbackbone.top_block.p6.{bias, weight}[0m
[34mbackbone.top_block.p7.{bias, weight}[0m
[34mhead.bbox_pred.{bias, weight}[0m
[34mhead.bbox_subnet.0.{bias, weight}[0m
[34mhead.bbox_subnet.2.{bias, weight}[0m
[34mhead.bbox_subnet.4.{bias, weight}[0m
[34mhead.bbox_subnet.6.{bias, weight}[0m
[34mhead.cls_score.{bias, weight}[0m
[34mhead.cls_subnet.0.{bias, weight}[0m
[34mhead.cls_subnet.2.{bias, weight}[0m
[34mhead.cls_subnet.4.{bias, weight}[0m
[34mhead.cls_subnet.6.{bias, weight}[0m
[02/24 19:00:10] fvcore.common.checkpoint WARNING: The checkpoint state_dict contains keys that are not used by the model:
  [35mfc1000.{bias, weight}[0m
  [35mstem.conv1.bias[0m
[02/24 19:00:10] d2.engine.train_loop INFO: Starting training from iteration 0
[02/24 19:00:30] d2.utils.events INFO:  eta: 1:01:40  iter: 19  total_loss: 2.809  loss_cls: 1.752  loss_box_reg: 1.057  time: 0.9087  last_time: 0.8683  data_time: 0.0666  last_data_time: 0.0574   lr: 0.00019981  max_mem: 21304M
[02/24 19:00:47] d2.utils.events INFO:  eta: 1:01:24  iter: 39  total_loss: 1.894  loss_cls: 1.192  loss_box_reg: 0.7027  time: 0.8883  last_time: 0.8604  data_time: 0.0611  last_data_time: 0.0501   lr: 0.00039961  max_mem: 21304M
[02/24 19:01:04] d2.utils.events INFO:  eta: 1:01:13  iter: 59  total_loss: 1.812  loss_cls: 1.144  loss_box_reg: 0.6654  time: 0.8812  last_time: 0.8659  data_time: 0.0587  last_data_time: 0.0518   lr: 0.00059941  max_mem: 21304M
[02/24 19:01:22] d2.utils.events INFO:  eta: 1:00:57  iter: 79  total_loss: 1.81  loss_cls: 1.159  loss_box_reg: 0.6479  time: 0.8779  last_time: 0.8470  data_time: 0.0581  last_data_time: 0.0804   lr: 0.00079921  max_mem: 21304M
[02/24 19:01:39] d2.utils.events INFO:  eta: 1:00:42  iter: 99  total_loss: 1.733  loss_cls: 1.115  loss_box_reg: 0.6187  time: 0.8767  last_time: 0.8817  data_time: 0.0597  last_data_time: 0.0675   lr: 0.00099901  max_mem: 21304M
[02/24 19:01:57] d2.utils.events INFO:  eta: 1:00:28  iter: 119  total_loss: 1.736  loss_cls: 1.126  loss_box_reg: 0.6098  time: 0.8758  last_time: 0.8786  data_time: 0.0590  last_data_time: 0.0647   lr: 0.0011988  max_mem: 21304M
[02/24 19:02:14] d2.utils.events INFO:  eta: 1:00:11  iter: 139  total_loss: 1.773  loss_cls: 1.165  loss_box_reg: 0.611  time: 0.8751  last_time: 0.8732  data_time: 0.0610  last_data_time: 0.0585   lr: 0.0013986  max_mem: 21304M
[02/24 19:02:31] d2.utils.events INFO:  eta: 0:59:56  iter: 159  total_loss: 1.734  loss_cls: 1.145  loss_box_reg: 0.5812  time: 0.8750  last_time: 0.8730  data_time: 0.0596  last_data_time: 0.0545   lr: 0.0015984  max_mem: 21304M
[02/24 19:02:49] d2.utils.events INFO:  eta: 0:59:39  iter: 179  total_loss: 1.692  loss_cls: 1.143  loss_box_reg: 0.5469  time: 0.8745  last_time: 0.8758  data_time: 0.0608  last_data_time: 0.0583   lr: 0.0017982  max_mem: 21304M
[02/24 19:03:06] d2.utils.events INFO:  eta: 0:59:22  iter: 199  total_loss: 1.634  loss_cls: 1.129  loss_box_reg: 0.5102  time: 0.8745  last_time: 0.8676  data_time: 0.0583  last_data_time: 0.0496   lr: 0.001998  max_mem: 21304M
[02/24 19:03:24] d2.utils.events INFO:  eta: 0:59:06  iter: 219  total_loss: 1.598  loss_cls: 1.143  loss_box_reg: 0.4604  time: 0.8744  last_time: 0.8782  data_time: 0.0580  last_data_time: 0.0605   lr: 0.0021978  max_mem: 21304M
[02/24 19:03:41] d2.utils.events INFO:  eta: 0:58:52  iter: 239  total_loss: 1.548  loss_cls: 1.124  loss_box_reg: 0.4206  time: 0.8748  last_time: 0.8800  data_time: 0.0610  last_data_time: 0.0613   lr: 0.0023976  max_mem: 21304M
[02/24 19:03:59] d2.utils.events INFO:  eta: 0:58:37  iter: 259  total_loss: 1.484  loss_cls: 1.065  loss_box_reg: 0.4136  time: 0.8751  last_time: 0.8798  data_time: 0.0593  last_data_time: 0.0604   lr: 0.0025974  max_mem: 21304M
[02/24 19:04:17] d2.utils.events INFO:  eta: 0:58:21  iter: 279  total_loss: 1.254  loss_cls: 0.8804  loss_box_reg: 0.3703  time: 0.8753  last_time: 0.8745  data_time: 0.0611  last_data_time: 0.0550   lr: 0.0027972  max_mem: 21304M
[02/24 19:04:34] d2.utils.events INFO:  eta: 0:58:05  iter: 299  total_loss: 1.155  loss_cls: 0.8006  loss_box_reg: 0.354  time: 0.8753  last_time: 0.8822  data_time: 0.0590  last_data_time: 0.0641   lr: 0.002997  max_mem: 21304M
[02/24 19:04:52] d2.utils.events INFO:  eta: 0:57:48  iter: 319  total_loss: 1.11  loss_cls: 0.7637  loss_box_reg: 0.3389  time: 0.8751  last_time: 0.8784  data_time: 0.0587  last_data_time: 0.0595   lr: 0.0031968  max_mem: 21304M
[02/24 19:05:09] d2.utils.events INFO:  eta: 0:57:32  iter: 339  total_loss: 1.057  loss_cls: 0.7288  loss_box_reg: 0.3301  time: 0.8751  last_time: 0.8988  data_time: 0.0595  last_data_time: 0.0791   lr: 0.0033966  max_mem: 21304M
[02/24 19:05:27] d2.utils.events INFO:  eta: 0:57:16  iter: 359  total_loss: 1.027  loss_cls: 0.7178  loss_box_reg: 0.3167  time: 0.8752  last_time: 0.8777  data_time: 0.0592  last_data_time: 0.0590   lr: 0.0035964  max_mem: 21304M
[02/24 19:05:44] d2.utils.events INFO:  eta: 0:56:59  iter: 379  total_loss: 1.005  loss_cls: 0.6952  loss_box_reg: 0.3082  time: 0.8753  last_time: 0.8686  data_time: 0.0593  last_data_time: 0.0509   lr: 0.0037962  max_mem: 21304M
[02/24 19:06:02] d2.utils.events INFO:  eta: 0:56:42  iter: 399  total_loss: 1.003  loss_cls: 0.6978  loss_box_reg: 0.3031  time: 0.8754  last_time: 0.8795  data_time: 0.0586  last_data_time: 0.0600   lr: 0.003996  max_mem: 21304M
[02/24 19:06:19] d2.utils.events INFO:  eta: 0:56:25  iter: 419  total_loss: 1.003  loss_cls: 0.6988  loss_box_reg: 0.3011  time: 0.8752  last_time: 0.8814  data_time: 0.0607  last_data_time: 0.0611   lr: 0.0041958  max_mem: 21304M
[02/24 19:06:37] d2.utils.events INFO:  eta: 0:56:07  iter: 439  total_loss: 0.9636  loss_cls: 0.6832  loss_box_reg: 0.2839  time: 0.8751  last_time: 0.8701  data_time: 0.0570  last_data_time: 0.0519   lr: 0.0043956  max_mem: 21304M
[02/24 19:06:54] d2.utils.events INFO:  eta: 0:55:49  iter: 459  total_loss: 0.959  loss_cls: 0.6728  loss_box_reg: 0.2854  time: 0.8752  last_time: 0.8920  data_time: 0.0583  last_data_time: 0.0729   lr: 0.0045954  max_mem: 21304M
[02/24 19:07:12] d2.utils.events INFO:  eta: 0:55:31  iter: 479  total_loss: 0.9309  loss_cls: 0.6547  loss_box_reg: 0.2671  time: 0.8753  last_time: 0.8748  data_time: 0.0587  last_data_time: 0.0560   lr: 0.0047952  max_mem: 21304M
[02/24 19:07:29] d2.utils.events INFO:  eta: 0:55:14  iter: 499  total_loss: 0.9384  loss_cls: 0.6599  loss_box_reg: 0.2734  time: 0.8752  last_time: 0.8811  data_time: 0.0594  last_data_time: 0.0621   lr: 0.004995  max_mem: 21304M
[02/24 19:07:47] d2.utils.events INFO:  eta: 0:54:57  iter: 519  total_loss: 0.9164  loss_cls: 0.6499  loss_box_reg: 0.272  time: 0.8750  last_time: 0.8987  data_time: 0.0605  last_data_time: 0.0804   lr: 0.0051948  max_mem: 21304M
[02/24 19:08:04] d2.utils.events INFO:  eta: 0:54:40  iter: 539  total_loss: 0.8693  loss_cls: 0.6128  loss_box_reg: 0.2592  time: 0.8751  last_time: 0.8765  data_time: 0.0625  last_data_time: 0.0583   lr: 0.0053946  max_mem: 21304M
[02/24 19:08:22] d2.utils.events INFO:  eta: 0:54:23  iter: 559  total_loss: 0.9024  loss_cls: 0.64  loss_box_reg: 0.2678  time: 0.8752  last_time: 0.8884  data_time: 0.0639  last_data_time: 0.0704   lr: 0.0055944  max_mem: 21304M
[02/24 19:08:39] d2.utils.events INFO:  eta: 0:54:05  iter: 579  total_loss: 1.326  loss_cls: 1.029  loss_box_reg: 0.3089  time: 0.8752  last_time: 0.8893  data_time: 0.0608  last_data_time: 0.0705   lr: 0.0057942  max_mem: 21304M
[02/24 19:08:57] d2.utils.events INFO:  eta: 0:53:48  iter: 599  total_loss: 1.154  loss_cls: 0.8791  loss_box_reg: 0.2849  time: 0.8751  last_time: 0.8722  data_time: 0.0606  last_data_time: 0.0521   lr: 0.005994  max_mem: 21304M
[02/24 19:09:14] d2.utils.events INFO:  eta: 0:53:30  iter: 619  total_loss: 0.9657  loss_cls: 0.6984  loss_box_reg: 0.2649  time: 0.8751  last_time: 0.8804  data_time: 0.0621  last_data_time: 0.0602   lr: 0.0061938  max_mem: 21304M
[02/24 19:09:32] d2.utils.events INFO:  eta: 0:53:13  iter: 639  total_loss: 0.9227  loss_cls: 0.6726  loss_box_reg: 0.2507  time: 0.8752  last_time: 0.8284  data_time: 0.0599  last_data_time: 0.0575   lr: 0.0063936  max_mem: 21304M
[02/24 19:09:49] d2.utils.events INFO:  eta: 0:52:55  iter: 659  total_loss: 0.8968  loss_cls: 0.6513  loss_box_reg: 0.2493  time: 0.8750  last_time: 0.8693  data_time: 0.0558  last_data_time: 0.0505   lr: 0.0065934  max_mem: 21304M
[02/24 19:10:07] d2.utils.events INFO:  eta: 0:52:38  iter: 679  total_loss: 0.8964  loss_cls: 0.6532  loss_box_reg: 0.2427  time: 0.8750  last_time: 0.8360  data_time: 0.0614  last_data_time: 0.0659   lr: 0.0067932  max_mem: 21304M
[02/24 19:10:24] d2.utils.events INFO:  eta: 0:52:21  iter: 699  total_loss: 0.876  loss_cls: 0.6389  loss_box_reg: 0.2399  time: 0.8751  last_time: 0.8779  data_time: 0.0612  last_data_time: 0.0598   lr: 0.006993  max_mem: 21304M
[02/24 19:10:42] d2.utils.events INFO:  eta: 0:52:03  iter: 719  total_loss: 0.8779  loss_cls: 0.6291  loss_box_reg: 0.2454  time: 0.8751  last_time: 0.8918  data_time: 0.0600  last_data_time: 0.0738   lr: 0.0071928  max_mem: 21304M
[02/24 19:10:59] d2.utils.events INFO:  eta: 0:51:45  iter: 739  total_loss: 0.8734  loss_cls: 0.6303  loss_box_reg: 0.2429  time: 0.8751  last_time: 0.8395  data_time: 0.0592  last_data_time: 0.0677   lr: 0.0073926  max_mem: 21304M
[02/24 19:11:17] d2.utils.events INFO:  eta: 0:51:28  iter: 759  total_loss: 0.839  loss_cls: 0.6108  loss_box_reg: 0.2243  time: 0.8749  last_time: 0.8696  data_time: 0.0598  last_data_time: 0.0515   lr: 0.0075924  max_mem: 21304M
[02/24 19:11:34] d2.utils.events INFO:  eta: 0:51:10  iter: 779  total_loss: 0.8568  loss_cls: 0.6166  loss_box_reg: 0.2357  time: 0.8749  last_time: 0.8690  data_time: 0.0604  last_data_time: 0.0506   lr: 0.0077922  max_mem: 21304M
[02/24 19:11:52] d2.utils.events INFO:  eta: 0:50:53  iter: 799  total_loss: 1.188  loss_cls: 0.9284  loss_box_reg: 0.2651  time: 0.8751  last_time: 0.8997  data_time: 0.0629  last_data_time: 0.0816   lr: 0.007992  max_mem: 21304M
[02/24 19:12:09] d2.utils.events INFO:  eta: 0:50:35  iter: 819  total_loss: 0.9765  loss_cls: 0.733  loss_box_reg: 0.2423  time: 0.8751  last_time: 0.8872  data_time: 0.0578  last_data_time: 0.0689   lr: 0.0081918  max_mem: 21304M
[02/24 19:12:27] d2.utils.events INFO:  eta: 0:50:18  iter: 839  total_loss: 0.8923  loss_cls: 0.6627  loss_box_reg: 0.2353  time: 0.8751  last_time: 0.8855  data_time: 0.0617  last_data_time: 0.0667   lr: 0.0083916  max_mem: 21304M
[02/24 19:12:44] d2.utils.events INFO:  eta: 0:50:00  iter: 859  total_loss: 0.8541  loss_cls: 0.6286  loss_box_reg: 0.2241  time: 0.8751  last_time: 0.8830  data_time: 0.0601  last_data_time: 0.0659   lr: 0.0085914  max_mem: 21304M
[02/24 19:13:02] d2.utils.events INFO:  eta: 0:49:42  iter: 879  total_loss: 0.8594  loss_cls: 0.6326  loss_box_reg: 0.2259  time: 0.8752  last_time: 0.8758  data_time: 0.0601  last_data_time: 0.0561   lr: 0.0087912  max_mem: 21304M
[02/24 19:13:19] d2.utils.events INFO:  eta: 0:49:25  iter: 899  total_loss: 0.8115  loss_cls: 0.5951  loss_box_reg: 0.2197  time: 0.8750  last_time: 0.8536  data_time: 0.0603  last_data_time: 0.0832   lr: 0.008991  max_mem: 21304M
[02/24 19:13:37] d2.utils.events INFO:  eta: 0:49:07  iter: 919  total_loss: 0.8163  loss_cls: 0.5986  loss_box_reg: 0.2152  time: 0.8750  last_time: 0.8723  data_time: 0.0605  last_data_time: 0.0543   lr: 0.0091908  max_mem: 21304M
[02/24 19:13:54] d2.utils.events INFO:  eta: 0:48:50  iter: 939  total_loss: 0.8033  loss_cls: 0.586  loss_box_reg: 0.2186  time: 0.8751  last_time: 0.8976  data_time: 0.0612  last_data_time: 0.0785   lr: 0.0093906  max_mem: 21304M
[02/24 19:14:12] d2.utils.events INFO:  eta: 0:48:32  iter: 959  total_loss: 0.7874  loss_cls: 0.562  loss_box_reg: 0.2183  time: 0.8751  last_time: 0.8710  data_time: 0.0603  last_data_time: 0.0520   lr: 0.0095904  max_mem: 21304M
[02/24 19:14:29] d2.utils.events INFO:  eta: 0:48:15  iter: 979  total_loss: 0.7728  loss_cls: 0.5599  loss_box_reg: 0.2131  time: 0.8752  last_time: 0.8901  data_time: 0.0633  last_data_time: 0.0726   lr: 0.0097902  max_mem: 21304M
[02/24 19:14:47] d2.utils.events INFO:  eta: 0:47:58  iter: 999  total_loss: 0.7578  loss_cls: 0.5397  loss_box_reg: 0.2153  time: 0.8751  last_time: 0.8930  data_time: 0.0626  last_data_time: 0.0756   lr: 0.00999  max_mem: 21304M
[02/24 19:15:04] d2.utils.events INFO:  eta: 0:47:41  iter: 1019  total_loss: 0.7298  loss_cls: 0.5191  loss_box_reg: 0.2104  time: 0.8751  last_time: 0.8903  data_time: 0.0617  last_data_time: 0.0723   lr: 0.01  max_mem: 21304M
[02/24 19:15:22] d2.utils.events INFO:  eta: 0:47:23  iter: 1039  total_loss: 0.725  loss_cls: 0.5095  loss_box_reg: 0.2105  time: 0.8751  last_time: 0.8698  data_time: 0.0570  last_data_time: 0.0511   lr: 0.01  max_mem: 21304M
[02/24 19:15:39] d2.utils.events INFO:  eta: 0:47:06  iter: 1059  total_loss: 0.7122  loss_cls: 0.4892  loss_box_reg: 0.2204  time: 0.8751  last_time: 0.8795  data_time: 0.0620  last_data_time: 0.0611   lr: 0.01  max_mem: 21304M
[02/24 19:15:57] d2.utils.events INFO:  eta: 0:46:49  iter: 1079  total_loss: 0.6746  loss_cls: 0.4667  loss_box_reg: 0.2127  time: 0.8749  last_time: 0.8812  data_time: 0.0625  last_data_time: 0.0631   lr: 0.01  max_mem: 21304M
[02/24 19:16:14] d2.utils.events INFO:  eta: 0:46:32  iter: 1099  total_loss: 0.7032  loss_cls: 0.4863  loss_box_reg: 0.2113  time: 0.8750  last_time: 0.8870  data_time: 0.0622  last_data_time: 0.0693   lr: 0.01  max_mem: 21304M
[02/24 19:16:32] d2.utils.events INFO:  eta: 0:46:15  iter: 1119  total_loss: 0.668  loss_cls: 0.4532  loss_box_reg: 0.2103  time: 0.8749  last_time: 0.8857  data_time: 0.0624  last_data_time: 0.0656   lr: 0.01  max_mem: 21304M
[02/24 19:16:49] d2.utils.events INFO:  eta: 0:45:58  iter: 1139  total_loss: 0.6296  loss_cls: 0.436  loss_box_reg: 0.1987  time: 0.8749  last_time: 0.8832  data_time: 0.0592  last_data_time: 0.0638   lr: 0.01  max_mem: 21304M
[02/24 19:17:07] d2.utils.events INFO:  eta: 0:45:40  iter: 1159  total_loss: 0.6263  loss_cls: 0.4199  loss_box_reg: 0.2041  time: 0.8747  last_time: 0.8847  data_time: 0.0586  last_data_time: 0.0671   lr: 0.01  max_mem: 21304M
[02/24 19:17:24] d2.utils.events INFO:  eta: 0:45:23  iter: 1179  total_loss: 0.7156  loss_cls: 0.5019  loss_box_reg: 0.2112  time: 0.8747  last_time: 0.8808  data_time: 0.0579  last_data_time: 0.0630   lr: 0.01  max_mem: 21304M
[02/24 19:17:42] d2.utils.events INFO:  eta: 0:45:05  iter: 1199  total_loss: 0.6195  loss_cls: 0.4183  loss_box_reg: 0.2012  time: 0.8747  last_time: 0.8851  data_time: 0.0582  last_data_time: 0.0675   lr: 0.01  max_mem: 21304M
[02/24 19:17:59] d2.utils.events INFO:  eta: 0:44:47  iter: 1219  total_loss: 0.6124  loss_cls: 0.4068  loss_box_reg: 0.2035  time: 0.8747  last_time: 0.8670  data_time: 0.0580  last_data_time: 0.0490   lr: 0.01  max_mem: 21304M
[02/24 19:18:17] d2.utils.events INFO:  eta: 0:44:29  iter: 1239  total_loss: 0.5842  loss_cls: 0.3864  loss_box_reg: 0.2005  time: 0.8747  last_time: 0.8786  data_time: 0.0608  last_data_time: 0.0608   lr: 0.01  max_mem: 21304M
[02/24 19:18:34] d2.utils.events INFO:  eta: 0:44:12  iter: 1259  total_loss: 0.566  loss_cls: 0.3698  loss_box_reg: 0.1978  time: 0.8747  last_time: 0.8379  data_time: 0.0595  last_data_time: 0.0672   lr: 0.01  max_mem: 21304M
[02/24 19:18:52] d2.utils.events INFO:  eta: 0:43:54  iter: 1279  total_loss: 0.5764  loss_cls: 0.3755  loss_box_reg: 0.2034  time: 0.8747  last_time: 0.8851  data_time: 0.0611  last_data_time: 0.0667   lr: 0.01  max_mem: 21304M
[02/24 19:19:09] d2.utils.events INFO:  eta: 0:43:36  iter: 1299  total_loss: 0.5628  loss_cls: 0.3668  loss_box_reg: 0.1975  time: 0.8748  last_time: 0.8836  data_time: 0.0591  last_data_time: 0.0649   lr: 0.01  max_mem: 21304M
[02/24 19:19:27] d2.utils.events INFO:  eta: 0:43:19  iter: 1319  total_loss: 0.5448  loss_cls: 0.3518  loss_box_reg: 0.1954  time: 0.8747  last_time: 0.8919  data_time: 0.0592  last_data_time: 0.0734   lr: 0.01  max_mem: 21304M
[02/24 19:19:44] d2.utils.events INFO:  eta: 0:43:01  iter: 1339  total_loss: 0.5451  loss_cls: 0.3488  loss_box_reg: 0.1955  time: 0.8748  last_time: 0.8825  data_time: 0.0611  last_data_time: 0.0645   lr: 0.01  max_mem: 21304M
[02/24 19:20:02] d2.utils.events INFO:  eta: 0:42:44  iter: 1359  total_loss: 0.5584  loss_cls: 0.3591  loss_box_reg: 0.1931  time: 0.8748  last_time: 0.8785  data_time: 0.0600  last_data_time: 0.0609   lr: 0.01  max_mem: 21304M
[02/24 19:20:19] d2.utils.events INFO:  eta: 0:42:26  iter: 1379  total_loss: 0.5119  loss_cls: 0.3191  loss_box_reg: 0.1933  time: 0.8749  last_time: 0.8814  data_time: 0.0611  last_data_time: 0.0633   lr: 0.01  max_mem: 21304M
[02/24 19:20:37] d2.utils.events INFO:  eta: 0:42:09  iter: 1399  total_loss: 0.4971  loss_cls: 0.3075  loss_box_reg: 0.1905  time: 0.8749  last_time: 0.8726  data_time: 0.0613  last_data_time: 0.0532   lr: 0.01  max_mem: 21304M
[02/24 19:20:54] d2.utils.events INFO:  eta: 0:41:52  iter: 1419  total_loss: 0.5012  loss_cls: 0.305  loss_box_reg: 0.1958  time: 0.8749  last_time: 0.8815  data_time: 0.0632  last_data_time: 0.0633   lr: 0.01  max_mem: 21304M
[02/24 19:21:00] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/model_0001426.pth
[02/24 19:21:02] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[02/24 19:21:02] d2.data.datasets.coco INFO: Loaded 160 images in COCO format from /media/nahyun/HDD//data_100/instances_test.json
[02/24 19:21:02] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[02/24 19:21:02] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[02/24 19:21:02] d2.data.common INFO: Serializing 160 elements to byte tensors and concatenating them all ...
[02/24 19:21:02] d2.data.common INFO: Serialized dataset takes 0.44 MiB
[02/24 19:21:02] d2.evaluation.evaluator INFO: Start inference on 160 batches
[02/24 19:21:02] d2.evaluation.evaluator INFO: Inference done 11/160. Dataloading: 0.0004 s/iter. Inference: 0.0288 s/iter. Eval: 0.0002 s/iter. Total: 0.0294 s/iter. ETA=0:00:04
[02/24 19:21:07] d2.evaluation.evaluator INFO: Total inference time: 0:00:04.640692 (0.029940 s / iter per device, on 1 devices)
[02/24 19:21:07] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:04 (0.028892 s / iter per device, on 1 devices)
[02/24 19:21:07] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[02/24 19:21:07] d2.evaluation.coco_evaluation INFO: Saving results to ./output/inference/coco_instances_results.json
[02/24 19:21:07] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[02/24 19:21:07] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[02/24 19:21:07] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.20 seconds.
[02/24 19:21:07] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[02/24 19:21:07] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.11 seconds.
[02/24 19:21:07] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|  AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:-----:|:------:|:------:|:-----:|:------:|:------:|
| 6.714 | 11.086 | 7.283  | 2.343 | 12.859 | 14.339 |
[02/24 19:21:07] d2.evaluation.coco_evaluation INFO: Per-category bbox AP: 
| category                   | AP     | category                     | AP     | category                     | AP     |
|:---------------------------|:-------|:-----------------------------|:-------|:-----------------------------|:-------|
| 000_aveda_shampoo          | 2.490  | 001_binder_clips_median      | 10.663 | 002_binder_clips_small       | 12.591 |
| 003_bombik_bucket          | 1.681  | 004_bonne_maman_blueberry    | 0.522  | 005_bonne_maman_raspberry    | 0.005  |
| 006_bonne_maman_strawberry | 0.152  | 007_costa_caramel            | 27.325 | 008_essential_oil_bergamot   | 5.211  |
| 009_garlic_toast_spread    | 2.337  | 010_handcream_avocado        | 0.465  | 011_hb_calcium               | 9.786  |
| 012_hb_grapeseed           | 8.945  | 013_hb_marine_collagen       | 1.955  | 014_hellmanns_mayonnaise     | 4.610  |
| 015_illy_blend             | 0.332  | 016_japanese_finger_cookies  | 5.054  | 017_john_west_canned_tuna    | 7.470  |
| 018_kerastase_shampoo      | 7.719  | 019_kiehls_facial_cream      | 14.631 | 020_kiihne_balsamic          | 0.027  |
| 021_kiihne_honey_mustard   | 3.776  | 022_lindor_matcha            | 19.865 | 023_lindor_salted_caramel    | 10.271 |
| 024_lush_mask              | 50.780 | 025_pasta_sauce_black_pepper | 0.188  | 026_pasta_sauce_tomato       | 0.213  |
| 027_pepsi                  | 26.175 | 028_portable_yogurt_machine  | 0.000  | 029_selfile_stick            | 0.323  |
| 030_sour_lemon_drops       | 0.892  | 031_sticky_notes             | 7.171  | 032_stridex_green            | 18.376 |
| 033_thermos_flask_cream    | 10.768 | 034_thermos_flask_muji       | 3.053  | 035_thermos_flask_sliver     | 2.701  |
| 036_tragata_olive_oil      | 0.000  | 037_tulip_luncheon_meat      | 7.753  | 038_unicharm_cotton_pad      | 32.779 |
| 039_vinda_tissue           | 23.528 | 040_wrigley_doublemint_gum   | 0.000  | 041_baseball_cap_black       | 0.674  |
| 042_baseball_cap_pink      | 1.783  | 043_bfe_facial_mask          | 19.507 | 044_corgi_doll               | 7.972  |
| 045_dinosaur_doll          | 12.470 | 046_geo_mocha                | 2.035  | 047_geo_roast_charcoal       | 3.829  |
| 048_instant_noodle_black   | 0.577  | 049_instant_noodle_red       | 9.925  | 050_nabati_cheese_wafer      | 14.664 |
| 051_truffettes             | 2.491  | 052_acnes_cream              | 0.116  | 053_aveda_conditioner        | 14.934 |
| 054_banana_milk_drink      | 2.757  | 055_candle_beast             | 11.753 | 056_china_persimmon          | 8.371  |
| 057_danisa_butter_cookies  | 0.034  | 058_effaclar_duo             | 0.050  | 059_evelom_cleanser          | 3.354  |
| 060_glasses_box_blone      | 4.576  | 061_handcream_iris           | 0.000  | 062_handcream_lavender       | 0.000  |
| 063_handcream_rosewater    | 0.000  | 064_handcream_summer_hill    | 0.000  | 065_hr_serum                 | 0.442  |
| 066_japanese_chocolate     | 13.670 | 067_kerastase_hair_treatment | 3.974  | 068_kiehls_serum             | 8.093  |
| 069_korean_beef_marinade   | 6.232  | 070_korean_doenjang          | 1.391  | 071_korean_gochujang         | 0.078  |
| 072_korean_ssamjang        | 0.678  | 073_loccitane_soap           | 3.815  | 074_marvis_toothpaste_purple | 15.756 |
| 075_mouse_thinkpad         | 1.058  | 076_oatly_chocolate          | 5.176  | 077_oatly_original           | 12.616 |
| 078_ousa_grated_cheese     | 6.712  | 079_polaroid_film            | 0.032  | 080_skinceuticals_be         | 24.254 |
| 081_skinceuticals_cf       | 8.564  | 082_skinceuticals_phyto      | 15.922 | 083_stapler_black            | 5.644  |
| 084_stapler_blue           | 3.792  | 085_sunscreen_blue           | 0.000  | 086_tempo_pocket_tissue      | 0.355  |
| 087_thermos_flask_purple   | 15.871 | 088_uha_matcha               | 11.077 | 089_urban_decay_spray        | 5.640  |
| 090_vitaboost_multivitamin | 0.231  | 091_watercolor_penbox        | 0.008  | 092_youthlt_bilberry_complex | 0.000  |
| 093_daiso_mod_remover      | 4.198  | 094_kaneyo_kitchen_bleach    | 3.739  | 095_lays_chip_bag_blue       | 4.975  |
| 096_lays_chip_bag_green    | 1.014  | 097_lays_chip_tube_auburn    | 4.688  | 098_lays_chip_tube_green     | 17.226 |
| 099_mug_blue               | 0.000  |                              |        |                              |        |
[02/24 19:21:07] d2.engine.defaults INFO: Evaluation results for retinanet_test in csv format:
[02/24 19:21:07] d2.evaluation.testing INFO: copypaste: Task: bbox
[02/24 19:21:07] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[02/24 19:21:07] d2.evaluation.testing INFO: copypaste: 6.7138,11.0862,7.2829,2.3428,12.8588,14.3388
[02/24 19:21:17] d2.utils.events INFO:  eta: 0:41:34  iter: 1439  total_loss: 0.4983  loss_cls: 0.2999  loss_box_reg: 0.195  time: 0.8749  last_time: 0.8856  data_time: 0.0616  last_data_time: 0.0666   lr: 0.01  max_mem: 21304M
[02/24 19:21:35] d2.utils.events INFO:  eta: 0:41:17  iter: 1459  total_loss: 0.4876  loss_cls: 0.2933  loss_box_reg: 0.1914  time: 0.8750  last_time: 0.8808  data_time: 0.0648  last_data_time: 0.0581   lr: 0.01  max_mem: 21304M
[02/24 19:21:52] d2.utils.events INFO:  eta: 0:41:00  iter: 1479  total_loss: 0.4619  loss_cls: 0.2722  loss_box_reg: 0.1872  time: 0.8749  last_time: 0.8708  data_time: 0.0611  last_data_time: 0.0526   lr: 0.01  max_mem: 21304M
[02/24 19:22:10] d2.utils.events INFO:  eta: 0:40:42  iter: 1499  total_loss: 0.4395  loss_cls: 0.2613  loss_box_reg: 0.1849  time: 0.8749  last_time: 0.8831  data_time: 0.0619  last_data_time: 0.0653   lr: 0.01  max_mem: 21304M
[02/24 19:22:28] d2.utils.events INFO:  eta: 0:40:25  iter: 1519  total_loss: 0.4462  loss_cls: 0.2613  loss_box_reg: 0.1874  time: 0.8750  last_time: 0.8734  data_time: 0.0639  last_data_time: 0.0552   lr: 0.01  max_mem: 21304M
[02/24 19:22:45] d2.utils.events INFO:  eta: 0:40:07  iter: 1539  total_loss: 0.4561  loss_cls: 0.2615  loss_box_reg: 0.1933  time: 0.8750  last_time: 0.8772  data_time: 0.0613  last_data_time: 0.0593   lr: 0.01  max_mem: 21304M
[02/24 19:23:03] d2.utils.events INFO:  eta: 0:39:50  iter: 1559  total_loss: 0.4389  loss_cls: 0.252  loss_box_reg: 0.1898  time: 0.8750  last_time: 0.8699  data_time: 0.0613  last_data_time: 0.0517   lr: 0.01  max_mem: 21304M
[02/24 19:23:20] d2.utils.events INFO:  eta: 0:39:32  iter: 1579  total_loss: 0.4432  loss_cls: 0.2495  loss_box_reg: 0.1956  time: 0.8750  last_time: 0.8825  data_time: 0.0607  last_data_time: 0.0643   lr: 0.01  max_mem: 21304M
[02/24 19:23:38] d2.utils.events INFO:  eta: 0:39:15  iter: 1599  total_loss: 0.423  loss_cls: 0.2384  loss_box_reg: 0.1841  time: 0.8750  last_time: 0.8867  data_time: 0.0611  last_data_time: 0.0685   lr: 0.01  max_mem: 21304M
[02/24 19:23:55] d2.utils.events INFO:  eta: 0:38:57  iter: 1619  total_loss: 0.4083  loss_cls: 0.2291  loss_box_reg: 0.1824  time: 0.8750  last_time: 0.8833  data_time: 0.0626  last_data_time: 0.0650   lr: 0.01  max_mem: 21304M
[02/24 19:24:13] d2.utils.events INFO:  eta: 0:38:40  iter: 1639  total_loss: 0.408  loss_cls: 0.2276  loss_box_reg: 0.1849  time: 0.8751  last_time: 0.8820  data_time: 0.0628  last_data_time: 0.0636   lr: 0.01  max_mem: 21304M
[02/24 19:24:30] d2.utils.events INFO:  eta: 0:38:22  iter: 1659  total_loss: 0.4073  loss_cls: 0.2282  loss_box_reg: 0.1808  time: 0.8752  last_time: 0.8818  data_time: 0.0621  last_data_time: 0.0634   lr: 0.01  max_mem: 21304M
[02/24 19:24:48] d2.utils.events INFO:  eta: 0:38:05  iter: 1679  total_loss: 0.3934  loss_cls: 0.2157  loss_box_reg: 0.1782  time: 0.8752  last_time: 0.8795  data_time: 0.0611  last_data_time: 0.0601   lr: 0.01  max_mem: 21304M
[02/24 19:25:06] d2.utils.events INFO:  eta: 0:37:47  iter: 1699  total_loss: 0.3927  loss_cls: 0.2142  loss_box_reg: 0.1788  time: 0.8752  last_time: 0.8357  data_time: 0.0614  last_data_time: 0.0644   lr: 0.01  max_mem: 21304M
[02/24 19:25:23] d2.utils.events INFO:  eta: 0:37:30  iter: 1719  total_loss: 0.39  loss_cls: 0.2124  loss_box_reg: 0.1773  time: 0.8752  last_time: 0.8859  data_time: 0.0601  last_data_time: 0.0677   lr: 0.01  max_mem: 21304M
[02/24 19:25:40] d2.utils.events INFO:  eta: 0:37:12  iter: 1739  total_loss: 0.3738  loss_cls: 0.2044  loss_box_reg: 0.172  time: 0.8752  last_time: 0.8832  data_time: 0.0619  last_data_time: 0.0652   lr: 0.01  max_mem: 21304M
[02/24 19:25:58] d2.utils.events INFO:  eta: 0:36:55  iter: 1759  total_loss: 0.382  loss_cls: 0.2038  loss_box_reg: 0.1803  time: 0.8752  last_time: 0.8795  data_time: 0.0627  last_data_time: 0.0602   lr: 0.01  max_mem: 21304M
[02/24 19:26:16] d2.utils.events INFO:  eta: 0:36:38  iter: 1779  total_loss: 0.3831  loss_cls: 0.2049  loss_box_reg: 0.1771  time: 0.8752  last_time: 0.8709  data_time: 0.0593  last_data_time: 0.0513   lr: 0.01  max_mem: 21304M
[02/24 19:26:33] d2.utils.events INFO:  eta: 0:36:20  iter: 1799  total_loss: 0.3742  loss_cls: 0.1993  loss_box_reg: 0.1762  time: 0.8752  last_time: 0.8797  data_time: 0.0615  last_data_time: 0.0607   lr: 0.01  max_mem: 21304M
[02/24 19:26:51] d2.utils.events INFO:  eta: 0:36:02  iter: 1819  total_loss: 0.3718  loss_cls: 0.1948  loss_box_reg: 0.1779  time: 0.8753  last_time: 0.8766  data_time: 0.0631  last_data_time: 0.0587   lr: 0.01  max_mem: 21304M
[02/24 19:27:08] d2.utils.events INFO:  eta: 0:35:44  iter: 1839  total_loss: 0.3721  loss_cls: 0.1912  loss_box_reg: 0.1792  time: 0.8753  last_time: 0.8881  data_time: 0.0586  last_data_time: 0.0681   lr: 0.01  max_mem: 21304M
[02/24 19:27:26] d2.utils.events INFO:  eta: 0:35:27  iter: 1859  total_loss: 0.3594  loss_cls: 0.186  loss_box_reg: 0.1733  time: 0.8752  last_time: 0.8377  data_time: 0.0598  last_data_time: 0.0656   lr: 0.01  max_mem: 21304M
[02/24 19:27:43] d2.utils.events INFO:  eta: 0:35:09  iter: 1879  total_loss: 0.3631  loss_cls: 0.1847  loss_box_reg: 0.1779  time: 0.8752  last_time: 0.8913  data_time: 0.0625  last_data_time: 0.0729   lr: 0.01  max_mem: 21304M
[02/24 19:28:00] d2.utils.events INFO:  eta: 0:34:52  iter: 1899  total_loss: 0.3612  loss_cls: 0.1867  loss_box_reg: 0.1755  time: 0.8751  last_time: 0.8786  data_time: 0.0601  last_data_time: 0.0600   lr: 0.01  max_mem: 21304M
[02/24 19:28:18] d2.utils.events INFO:  eta: 0:34:34  iter: 1919  total_loss: 0.3479  loss_cls: 0.1768  loss_box_reg: 0.1739  time: 0.8751  last_time: 0.8809  data_time: 0.0608  last_data_time: 0.0607   lr: 0.01  max_mem: 21304M
[02/24 19:28:35] d2.utils.events INFO:  eta: 0:34:17  iter: 1939  total_loss: 0.3492  loss_cls: 0.1795  loss_box_reg: 0.168  time: 0.8751  last_time: 0.8831  data_time: 0.0657  last_data_time: 0.0646   lr: 0.01  max_mem: 21304M
[02/24 19:28:53] d2.utils.events INFO:  eta: 0:33:59  iter: 1959  total_loss: 0.3599  loss_cls: 0.1828  loss_box_reg: 0.1757  time: 0.8751  last_time: 0.8845  data_time: 0.0619  last_data_time: 0.0665   lr: 0.01  max_mem: 21304M
[02/24 19:29:11] d2.utils.events INFO:  eta: 0:33:42  iter: 1979  total_loss: 0.3475  loss_cls: 0.1769  loss_box_reg: 0.1683  time: 0.8752  last_time: 0.8808  data_time: 0.0599  last_data_time: 0.0628   lr: 0.01  max_mem: 21304M
[02/24 19:29:28] d2.utils.events INFO:  eta: 0:33:24  iter: 1999  total_loss: 0.3458  loss_cls: 0.1758  loss_box_reg: 0.1692  time: 0.8751  last_time: 0.8679  data_time: 0.0608  last_data_time: 0.0494   lr: 0.01  max_mem: 21304M
[02/24 19:29:45] d2.utils.events INFO:  eta: 0:33:06  iter: 2019  total_loss: 0.3446  loss_cls: 0.1731  loss_box_reg: 0.1712  time: 0.8751  last_time: 0.8760  data_time: 0.0606  last_data_time: 0.0576   lr: 0.01  max_mem: 21304M
[02/24 19:30:03] d2.utils.events INFO:  eta: 0:32:49  iter: 2039  total_loss: 0.3338  loss_cls: 0.1668  loss_box_reg: 0.1678  time: 0.8751  last_time: 0.8876  data_time: 0.0607  last_data_time: 0.0688   lr: 0.01  max_mem: 21304M
[02/24 19:30:20] d2.utils.events INFO:  eta: 0:32:31  iter: 2059  total_loss: 0.3426  loss_cls: 0.1748  loss_box_reg: 0.1718  time: 0.8751  last_time: 0.8893  data_time: 0.0601  last_data_time: 0.0703   lr: 0.01  max_mem: 21304M
[02/24 19:30:38] d2.utils.events INFO:  eta: 0:32:14  iter: 2079  total_loss: 0.3318  loss_cls: 0.165  loss_box_reg: 0.1708  time: 0.8751  last_time: 0.8871  data_time: 0.0643  last_data_time: 0.0685   lr: 0.01  max_mem: 21304M
[02/24 19:30:56] d2.utils.events INFO:  eta: 0:31:56  iter: 2099  total_loss: 0.3329  loss_cls: 0.1623  loss_box_reg: 0.1634  time: 0.8751  last_time: 0.8833  data_time: 0.0602  last_data_time: 0.0655   lr: 0.01  max_mem: 21304M
[02/24 19:31:13] d2.utils.events INFO:  eta: 0:31:38  iter: 2119  total_loss: 0.3272  loss_cls: 0.1628  loss_box_reg: 0.1662  time: 0.8751  last_time: 0.8847  data_time: 0.0588  last_data_time: 0.0661   lr: 0.01  max_mem: 21304M
[02/24 19:31:31] d2.utils.events INFO:  eta: 0:31:21  iter: 2139  total_loss: 0.3295  loss_cls: 0.1636  loss_box_reg: 0.1668  time: 0.8752  last_time: 0.8853  data_time: 0.0625  last_data_time: 0.0668   lr: 0.01  max_mem: 21304M
[02/24 19:31:48] d2.utils.events INFO:  eta: 0:31:04  iter: 2159  total_loss: 0.3251  loss_cls: 0.1563  loss_box_reg: 0.1659  time: 0.8751  last_time: 0.8746  data_time: 0.0616  last_data_time: 0.0561   lr: 0.01  max_mem: 21304M
[02/24 19:32:06] d2.utils.events INFO:  eta: 0:30:46  iter: 2179  total_loss: 0.3232  loss_cls: 0.1587  loss_box_reg: 0.1685  time: 0.8752  last_time: 0.8763  data_time: 0.0617  last_data_time: 0.0576   lr: 0.01  max_mem: 21304M
[02/24 19:32:23] d2.utils.events INFO:  eta: 0:30:29  iter: 2199  total_loss: 0.3145  loss_cls: 0.1514  loss_box_reg: 0.1655  time: 0.8752  last_time: 0.8720  data_time: 0.0619  last_data_time: 0.0533   lr: 0.01  max_mem: 21304M
[02/24 19:32:41] d2.utils.events INFO:  eta: 0:30:11  iter: 2219  total_loss: 0.329  loss_cls: 0.1594  loss_box_reg: 0.1699  time: 0.8752  last_time: 0.8803  data_time: 0.0604  last_data_time: 0.0615   lr: 0.01  max_mem: 21304M
[02/24 19:32:58] d2.utils.events INFO:  eta: 0:29:54  iter: 2239  total_loss: 0.3185  loss_cls: 0.1566  loss_box_reg: 0.166  time: 0.8752  last_time: 0.8859  data_time: 0.0616  last_data_time: 0.0670   lr: 0.01  max_mem: 21304M
[02/24 19:33:16] d2.utils.events INFO:  eta: 0:29:37  iter: 2259  total_loss: 0.3163  loss_cls: 0.1553  loss_box_reg: 0.161  time: 0.8753  last_time: 0.8749  data_time: 0.0625  last_data_time: 0.0567   lr: 0.01  max_mem: 21304M
[02/24 19:33:34] d2.utils.events INFO:  eta: 0:29:19  iter: 2279  total_loss: 0.3127  loss_cls: 0.1531  loss_box_reg: 0.1577  time: 0.8753  last_time: 0.8854  data_time: 0.0630  last_data_time: 0.0672   lr: 0.01  max_mem: 21304M
[02/24 19:33:51] d2.utils.events INFO:  eta: 0:29:02  iter: 2299  total_loss: 0.3151  loss_cls: 0.1506  loss_box_reg: 0.1642  time: 0.8753  last_time: 0.8842  data_time: 0.0615  last_data_time: 0.0670   lr: 0.01  max_mem: 21304M
[02/24 19:34:09] d2.utils.events INFO:  eta: 0:28:44  iter: 2319  total_loss: 0.322  loss_cls: 0.1549  loss_box_reg: 0.1673  time: 0.8753  last_time: 0.8297  data_time: 0.0603  last_data_time: 0.0590   lr: 0.01  max_mem: 21304M
[02/24 19:34:26] d2.utils.events INFO:  eta: 0:28:27  iter: 2339  total_loss: 0.3142  loss_cls: 0.1504  loss_box_reg: 0.1637  time: 0.8753  last_time: 0.8847  data_time: 0.0627  last_data_time: 0.0661   lr: 0.01  max_mem: 21304M
[02/24 19:34:43] d2.utils.events INFO:  eta: 0:28:09  iter: 2359  total_loss: 0.3118  loss_cls: 0.1515  loss_box_reg: 0.1603  time: 0.8752  last_time: 0.8718  data_time: 0.0605  last_data_time: 0.0531   lr: 0.01  max_mem: 21304M
[02/24 19:35:01] d2.utils.events INFO:  eta: 0:27:51  iter: 2379  total_loss: 0.306  loss_cls: 0.1476  loss_box_reg: 0.1582  time: 0.8753  last_time: 0.8799  data_time: 0.0653  last_data_time: 0.0617   lr: 0.01  max_mem: 21304M
[02/24 19:35:19] d2.utils.events INFO:  eta: 0:27:34  iter: 2399  total_loss: 0.3086  loss_cls: 0.1458  loss_box_reg: 0.1624  time: 0.8753  last_time: 0.8774  data_time: 0.0623  last_data_time: 0.0590   lr: 0.01  max_mem: 21304M
[02/24 19:35:36] d2.utils.events INFO:  eta: 0:27:16  iter: 2419  total_loss: 0.3078  loss_cls: 0.1461  loss_box_reg: 0.1626  time: 0.8753  last_time: 0.8869  data_time: 0.0627  last_data_time: 0.0684   lr: 0.01  max_mem: 21304M
[02/24 19:35:54] d2.utils.events INFO:  eta: 0:26:59  iter: 2439  total_loss: 0.3085  loss_cls: 0.1469  loss_box_reg: 0.1607  time: 0.8753  last_time: 0.8951  data_time: 0.0618  last_data_time: 0.0771   lr: 0.01  max_mem: 21304M
[02/24 19:36:11] d2.utils.events INFO:  eta: 0:26:41  iter: 2459  total_loss: 0.3093  loss_cls: 0.1443  loss_box_reg: 0.1643  time: 0.8753  last_time: 0.8847  data_time: 0.0606  last_data_time: 0.0647   lr: 0.01  max_mem: 21304M
[02/24 19:36:29] d2.utils.events INFO:  eta: 0:26:23  iter: 2479  total_loss: 0.3085  loss_cls: 0.1499  loss_box_reg: 0.162  time: 0.8753  last_time: 0.8824  data_time: 0.0598  last_data_time: 0.0606   lr: 0.01  max_mem: 21304M
[02/24 19:36:46] d2.utils.events INFO:  eta: 0:26:06  iter: 2499  total_loss: 0.3077  loss_cls: 0.147  loss_box_reg: 0.1606  time: 0.8753  last_time: 0.8726  data_time: 0.0595  last_data_time: 0.0546   lr: 0.01  max_mem: 21304M
[02/24 19:37:04] d2.utils.events INFO:  eta: 0:25:48  iter: 2519  total_loss: 0.3017  loss_cls: 0.1451  loss_box_reg: 0.1553  time: 0.8753  last_time: 0.8919  data_time: 0.0632  last_data_time: 0.0729   lr: 0.01  max_mem: 21304M
[02/24 19:37:21] d2.utils.events INFO:  eta: 0:25:31  iter: 2539  total_loss: 0.294  loss_cls: 0.1393  loss_box_reg: 0.1545  time: 0.8754  last_time: 0.8942  data_time: 0.0619  last_data_time: 0.0746   lr: 0.01  max_mem: 21304M
[02/24 19:37:39] d2.utils.events INFO:  eta: 0:25:13  iter: 2559  total_loss: 0.2944  loss_cls: 0.1389  loss_box_reg: 0.156  time: 0.8754  last_time: 0.8778  data_time: 0.0618  last_data_time: 0.0582   lr: 0.01  max_mem: 21304M
[02/24 19:37:56] d2.utils.events INFO:  eta: 0:24:56  iter: 2579  total_loss: 0.3008  loss_cls: 0.1431  loss_box_reg: 0.1608  time: 0.8754  last_time: 0.8756  data_time: 0.0613  last_data_time: 0.0576   lr: 0.01  max_mem: 21304M
[02/24 19:38:14] d2.utils.events INFO:  eta: 0:24:38  iter: 2599  total_loss: 0.3005  loss_cls: 0.138  loss_box_reg: 0.1604  time: 0.8754  last_time: 0.8903  data_time: 0.0607  last_data_time: 0.0715   lr: 0.01  max_mem: 21304M
[02/24 19:38:32] d2.utils.events INFO:  eta: 0:24:20  iter: 2619  total_loss: 0.2902  loss_cls: 0.1358  loss_box_reg: 0.1581  time: 0.8754  last_time: 0.8765  data_time: 0.0619  last_data_time: 0.0578   lr: 0.01  max_mem: 21304M
[02/24 19:38:49] d2.utils.events INFO:  eta: 0:24:03  iter: 2639  total_loss: 0.2852  loss_cls: 0.132  loss_box_reg: 0.1563  time: 0.8754  last_time: 0.8847  data_time: 0.0618  last_data_time: 0.0668   lr: 0.01  max_mem: 21304M
[02/24 19:39:07] d2.utils.events INFO:  eta: 0:23:45  iter: 2659  total_loss: 0.2958  loss_cls: 0.1345  loss_box_reg: 0.1588  time: 0.8754  last_time: 0.8764  data_time: 0.0585  last_data_time: 0.0577   lr: 0.01  max_mem: 21304M
[02/24 19:39:24] d2.utils.events INFO:  eta: 0:23:27  iter: 2679  total_loss: 0.2859  loss_cls: 0.1333  loss_box_reg: 0.1575  time: 0.8754  last_time: 0.8753  data_time: 0.0570  last_data_time: 0.0584   lr: 0.01  max_mem: 21304M
[02/24 19:39:42] d2.utils.events INFO:  eta: 0:23:09  iter: 2699  total_loss: 0.301  loss_cls: 0.1393  loss_box_reg: 0.1624  time: 0.8754  last_time: 0.8772  data_time: 0.0591  last_data_time: 0.0579   lr: 0.01  max_mem: 21304M
[02/24 19:39:59] d2.utils.events INFO:  eta: 0:22:52  iter: 2719  total_loss: 0.2882  loss_cls: 0.1362  loss_box_reg: 0.1528  time: 0.8754  last_time: 0.8774  data_time: 0.0588  last_data_time: 0.0593   lr: 0.01  max_mem: 21304M
[02/24 19:40:17] d2.utils.events INFO:  eta: 0:22:34  iter: 2739  total_loss: 0.2923  loss_cls: 0.1351  loss_box_reg: 0.1562  time: 0.8754  last_time: 0.8720  data_time: 0.0596  last_data_time: 0.0531   lr: 0.01  max_mem: 21304M
[02/24 19:40:34] d2.utils.events INFO:  eta: 0:22:16  iter: 2759  total_loss: 0.2981  loss_cls: 0.1376  loss_box_reg: 0.1595  time: 0.8754  last_time: 0.8760  data_time: 0.0572  last_data_time: 0.0573   lr: 0.01  max_mem: 21304M
[02/24 19:40:52] d2.utils.events INFO:  eta: 0:21:59  iter: 2779  total_loss: 0.2835  loss_cls: 0.1266  loss_box_reg: 0.1566  time: 0.8754  last_time: 0.8791  data_time: 0.0593  last_data_time: 0.0601   lr: 0.01  max_mem: 21304M
[02/24 19:41:09] d2.utils.events INFO:  eta: 0:21:41  iter: 2799  total_loss: 0.2844  loss_cls: 0.1324  loss_box_reg: 0.1511  time: 0.8754  last_time: 0.8296  data_time: 0.0600  last_data_time: 0.0582   lr: 0.01  max_mem: 21304M
[02/24 19:41:27] d2.utils.events INFO:  eta: 0:21:24  iter: 2819  total_loss: 0.291  loss_cls: 0.1332  loss_box_reg: 0.1576  time: 0.8754  last_time: 0.8737  data_time: 0.0596  last_data_time: 0.0553   lr: 0.01  max_mem: 21304M
[02/24 19:41:44] d2.utils.events INFO:  eta: 0:21:06  iter: 2839  total_loss: 0.294  loss_cls: 0.1339  loss_box_reg: 0.1591  time: 0.8754  last_time: 0.8940  data_time: 0.0604  last_data_time: 0.0754   lr: 0.01  max_mem: 21304M
[02/24 19:41:56] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/model_0002853.pth
[02/24 19:41:58] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[02/24 19:41:58] d2.data.datasets.coco INFO: Loaded 160 images in COCO format from /media/nahyun/HDD//data_100/instances_test.json
[02/24 19:41:58] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[02/24 19:41:58] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[02/24 19:41:58] d2.data.common INFO: Serializing 160 elements to byte tensors and concatenating them all ...
[02/24 19:41:58] d2.data.common INFO: Serialized dataset takes 0.44 MiB
[02/24 19:41:58] d2.evaluation.evaluator INFO: Start inference on 160 batches
[02/24 19:41:59] d2.evaluation.evaluator INFO: Inference done 11/160. Dataloading: 0.0004 s/iter. Inference: 0.0290 s/iter. Eval: 0.0002 s/iter. Total: 0.0296 s/iter. ETA=0:00:04
[02/24 19:42:03] d2.evaluation.evaluator INFO: Total inference time: 0:00:04.662987 (0.030084 s / iter per device, on 1 devices)
[02/24 19:42:03] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:04 (0.028940 s / iter per device, on 1 devices)
[02/24 19:42:03] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[02/24 19:42:03] d2.evaluation.coco_evaluation INFO: Saving results to ./output/inference/coco_instances_results.json
[02/24 19:42:03] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[02/24 19:42:03] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[02/24 19:42:04] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.25 seconds.
[02/24 19:42:04] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[02/24 19:42:04] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.11 seconds.
[02/24 19:42:04] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:------:|:------:|:------:|:-----:|:------:|:------:|
| 12.482 | 20.710 | 12.972 | 6.585 | 20.297 | 24.633 |
[02/24 19:42:04] d2.evaluation.coco_evaluation INFO: Per-category bbox AP: 
| category                   | AP     | category                     | AP     | category                     | AP     |
|:---------------------------|:-------|:-----------------------------|:-------|:-----------------------------|:-------|
| 000_aveda_shampoo          | 14.685 | 001_binder_clips_median      | 21.774 | 002_binder_clips_small       | 13.543 |
| 003_bombik_bucket          | 5.816  | 004_bonne_maman_blueberry    | 0.106  | 005_bonne_maman_raspberry    | 0.316  |
| 006_bonne_maman_strawberry | 0.021  | 007_costa_caramel            | 22.839 | 008_essential_oil_bergamot   | 19.714 |
| 009_garlic_toast_spread    | 2.529  | 010_handcream_avocado        | 2.259  | 011_hb_calcium               | 15.824 |
| 012_hb_grapeseed           | 12.674 | 013_hb_marine_collagen       | 10.250 | 014_hellmanns_mayonnaise     | 3.641  |
| 015_illy_blend             | 3.102  | 016_japanese_finger_cookies  | 4.349  | 017_john_west_canned_tuna    | 6.872  |
| 018_kerastase_shampoo      | 4.356  | 019_kiehls_facial_cream      | 14.905 | 020_kiihne_balsamic          | 0.025  |
| 021_kiihne_honey_mustard   | 10.140 | 022_lindor_matcha            | 21.538 | 023_lindor_salted_caramel    | 35.845 |
| 024_lush_mask              | 71.661 | 025_pasta_sauce_black_pepper | 0.581  | 026_pasta_sauce_tomato       | 3.197  |
| 027_pepsi                  | 42.500 | 028_portable_yogurt_machine  | 0.453  | 029_selfile_stick            | 2.007  |
| 030_sour_lemon_drops       | 6.208  | 031_sticky_notes             | 12.031 | 032_stridex_green            | 39.279 |
| 033_thermos_flask_cream    | 35.396 | 034_thermos_flask_muji       | 1.486  | 035_thermos_flask_sliver     | 1.017  |
| 036_tragata_olive_oil      | 1.700  | 037_tulip_luncheon_meat      | 8.472  | 038_unicharm_cotton_pad      | 36.993 |
| 039_vinda_tissue           | 31.911 | 040_wrigley_doublemint_gum   | 0.677  | 041_baseball_cap_black       | 11.843 |
| 042_baseball_cap_pink      | 6.260  | 043_bfe_facial_mask          | 23.221 | 044_corgi_doll               | 4.915  |
| 045_dinosaur_doll          | 25.748 | 046_geo_mocha                | 3.122  | 047_geo_roast_charcoal       | 0.669  |
| 048_instant_noodle_black   | 2.544  | 049_instant_noodle_red       | 14.817 | 050_nabati_cheese_wafer      | 34.587 |
| 051_truffettes             | 5.262  | 052_acnes_cream              | 13.124 | 053_aveda_conditioner        | 35.848 |
| 054_banana_milk_drink      | 3.496  | 055_candle_beast             | 27.199 | 056_china_persimmon          | 8.832  |
| 057_danisa_butter_cookies  | 2.967  | 058_effaclar_duo             | 7.822  | 059_evelom_cleanser          | 6.371  |
| 060_glasses_box_blone      | 8.176  | 061_handcream_iris           | 0.000  | 062_handcream_lavender       | 0.165  |
| 063_handcream_rosewater    | 0.566  | 064_handcream_summer_hill    | 0.000  | 065_hr_serum                 | 8.423  |
| 066_japanese_chocolate     | 27.666 | 067_kerastase_hair_treatment | 8.883  | 068_kiehls_serum             | 20.505 |
| 069_korean_beef_marinade   | 15.528 | 070_korean_doenjang          | 6.683  | 071_korean_gochujang         | 0.021  |
| 072_korean_ssamjang        | 4.035  | 073_loccitane_soap           | 16.703 | 074_marvis_toothpaste_purple | 39.559 |
| 075_mouse_thinkpad         | 7.835  | 076_oatly_chocolate          | 7.285  | 077_oatly_original           | 20.982 |
| 078_ousa_grated_cheese     | 6.893  | 079_polaroid_film            | 0.426  | 080_skinceuticals_be         | 55.065 |
| 081_skinceuticals_cf       | 15.995 | 082_skinceuticals_phyto      | 18.433 | 083_stapler_black            | 10.579 |
| 084_stapler_blue           | 15.303 | 085_sunscreen_blue           | 0.362  | 086_tempo_pocket_tissue      | 0.927  |
| 087_thermos_flask_purple   | 38.406 | 088_uha_matcha               | 12.145 | 089_urban_decay_spray        | 7.316  |
| 090_vitaboost_multivitamin | 6.493  | 091_watercolor_penbox        | 0.032  | 092_youthlt_bilberry_complex | 0.000  |
| 093_daiso_mod_remover      | 9.042  | 094_kaneyo_kitchen_bleach    | 11.638 | 095_lays_chip_bag_blue       | 14.687 |
| 096_lays_chip_bag_green    | 10.454 | 097_lays_chip_tube_auburn    | 9.761  | 098_lays_chip_tube_green     | 29.873 |
| 099_mug_blue               | 0.000  |                              |        |                              |        |
[02/24 19:42:04] d2.engine.defaults INFO: Evaluation results for retinanet_test in csv format:
[02/24 19:42:04] d2.evaluation.testing INFO: copypaste: Task: bbox
[02/24 19:42:04] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[02/24 19:42:04] d2.evaluation.testing INFO: copypaste: 12.4818,20.7101,12.9715,6.5854,20.2970,24.6334
[02/24 19:42:07] d2.utils.events INFO:  eta: 0:20:49  iter: 2859  total_loss: 0.2794  loss_cls: 0.1289  loss_box_reg: 0.153  time: 0.8754  last_time: 0.8755  data_time: 0.0601  last_data_time: 0.0578   lr: 0.01  max_mem: 21304M
[02/24 19:42:25] d2.utils.events INFO:  eta: 0:20:31  iter: 2879  total_loss: 0.2803  loss_cls: 0.1277  loss_box_reg: 0.1515  time: 0.8753  last_time: 0.8849  data_time: 0.0590  last_data_time: 0.0676   lr: 0.01  max_mem: 21304M
[02/24 19:42:42] d2.utils.events INFO:  eta: 0:20:13  iter: 2899  total_loss: 0.2768  loss_cls: 0.1258  loss_box_reg: 0.1523  time: 0.8753  last_time: 0.8715  data_time: 0.0593  last_data_time: 0.0533   lr: 0.01  max_mem: 21304M
[02/24 19:43:00] d2.utils.events INFO:  eta: 0:19:56  iter: 2919  total_loss: 0.2786  loss_cls: 0.1283  loss_box_reg: 0.1503  time: 0.8753  last_time: 0.8882  data_time: 0.0590  last_data_time: 0.0705   lr: 0.01  max_mem: 21304M
[02/24 19:43:17] d2.utils.events INFO:  eta: 0:19:38  iter: 2939  total_loss: 0.2875  loss_cls: 0.1303  loss_box_reg: 0.1537  time: 0.8753  last_time: 0.8769  data_time: 0.0581  last_data_time: 0.0588   lr: 0.01  max_mem: 21304M
[02/24 19:43:35] d2.utils.events INFO:  eta: 0:19:20  iter: 2959  total_loss: 0.2805  loss_cls: 0.1282  loss_box_reg: 0.1511  time: 0.8753  last_time: 0.8716  data_time: 0.0582  last_data_time: 0.0538   lr: 0.01  max_mem: 21304M
[02/24 19:43:52] d2.utils.events INFO:  eta: 0:19:03  iter: 2979  total_loss: 0.2789  loss_cls: 0.1261  loss_box_reg: 0.1503  time: 0.8752  last_time: 0.8275  data_time: 0.0605  last_data_time: 0.0577   lr: 0.01  max_mem: 21304M
[02/24 19:44:10] d2.utils.events INFO:  eta: 0:18:45  iter: 2999  total_loss: 0.2825  loss_cls: 0.1273  loss_box_reg: 0.1543  time: 0.8752  last_time: 0.8739  data_time: 0.0581  last_data_time: 0.0569   lr: 0.01  max_mem: 21304M
[02/24 19:44:27] d2.utils.events INFO:  eta: 0:18:28  iter: 3019  total_loss: 0.2766  loss_cls: 0.1246  loss_box_reg: 0.1527  time: 0.8752  last_time: 0.8768  data_time: 0.0591  last_data_time: 0.0589   lr: 0.01  max_mem: 21304M
[02/24 19:44:44] d2.utils.events INFO:  eta: 0:18:10  iter: 3039  total_loss: 0.2604  loss_cls: 0.1142  loss_box_reg: 0.1464  time: 0.8751  last_time: 0.8846  data_time: 0.0601  last_data_time: 0.0667   lr: 0.01  max_mem: 21304M
[02/24 19:45:02] d2.utils.events INFO:  eta: 0:17:52  iter: 3059  total_loss: 0.2797  loss_cls: 0.125  loss_box_reg: 0.1542  time: 0.8751  last_time: 0.8797  data_time: 0.0615  last_data_time: 0.0620   lr: 0.01  max_mem: 21304M
[02/24 19:45:19] d2.utils.events INFO:  eta: 0:17:35  iter: 3079  total_loss: 0.2669  loss_cls: 0.1176  loss_box_reg: 0.1492  time: 0.8751  last_time: 0.8810  data_time: 0.0609  last_data_time: 0.0626   lr: 0.01  max_mem: 21304M
[02/24 19:45:37] d2.utils.events INFO:  eta: 0:17:17  iter: 3099  total_loss: 0.2778  loss_cls: 0.126  loss_box_reg: 0.1523  time: 0.8751  last_time: 0.8896  data_time: 0.0607  last_data_time: 0.0713   lr: 0.01  max_mem: 21304M
[02/24 19:45:54] d2.utils.events INFO:  eta: 0:17:00  iter: 3119  total_loss: 0.2812  loss_cls: 0.1252  loss_box_reg: 0.1551  time: 0.8750  last_time: 0.8824  data_time: 0.0601  last_data_time: 0.0657   lr: 0.01  max_mem: 21304M
[02/24 19:46:12] d2.utils.events INFO:  eta: 0:16:42  iter: 3139  total_loss: 0.2692  loss_cls: 0.1198  loss_box_reg: 0.1491  time: 0.8751  last_time: 0.8798  data_time: 0.0605  last_data_time: 0.0623   lr: 0.01  max_mem: 21304M
[02/24 19:46:29] d2.utils.events INFO:  eta: 0:16:25  iter: 3159  total_loss: 0.278  loss_cls: 0.1244  loss_box_reg: 0.1519  time: 0.8750  last_time: 0.8165  data_time: 0.0590  last_data_time: 0.0473   lr: 0.01  max_mem: 21304M
[02/24 19:46:47] d2.utils.events INFO:  eta: 0:16:07  iter: 3179  total_loss: 0.2817  loss_cls: 0.1286  loss_box_reg: 0.1526  time: 0.8750  last_time: 0.8867  data_time: 0.0634  last_data_time: 0.0674   lr: 0.01  max_mem: 21304M
[02/24 19:47:04] d2.utils.events INFO:  eta: 0:15:50  iter: 3199  total_loss: 0.2605  loss_cls: 0.1165  loss_box_reg: 0.146  time: 0.8750  last_time: 0.8855  data_time: 0.0608  last_data_time: 0.0686   lr: 0.01  max_mem: 21304M
[02/24 19:47:21] d2.utils.events INFO:  eta: 0:15:32  iter: 3219  total_loss: 0.2765  loss_cls: 0.123  loss_box_reg: 0.1517  time: 0.8750  last_time: 0.8877  data_time: 0.0603  last_data_time: 0.0684   lr: 0.01  max_mem: 21304M
[02/24 19:47:39] d2.utils.events INFO:  eta: 0:15:14  iter: 3239  total_loss: 0.263  loss_cls: 0.1178  loss_box_reg: 0.1451  time: 0.8750  last_time: 0.8699  data_time: 0.0612  last_data_time: 0.0529   lr: 0.01  max_mem: 21304M
[02/24 19:47:56] d2.utils.events INFO:  eta: 0:14:57  iter: 3259  total_loss: 0.2701  loss_cls: 0.1219  loss_box_reg: 0.1491  time: 0.8749  last_time: 0.8797  data_time: 0.0619  last_data_time: 0.0619   lr: 0.01  max_mem: 21304M
[02/24 19:48:14] d2.utils.events INFO:  eta: 0:14:39  iter: 3279  total_loss: 0.2735  loss_cls: 0.1247  loss_box_reg: 0.1503  time: 0.8750  last_time: 0.8287  data_time: 0.0638  last_data_time: 0.0576   lr: 0.01  max_mem: 21304M
[02/24 19:48:31] d2.utils.events INFO:  eta: 0:14:22  iter: 3299  total_loss: 0.2756  loss_cls: 0.1194  loss_box_reg: 0.1517  time: 0.8749  last_time: 0.8750  data_time: 0.0609  last_data_time: 0.0567   lr: 0.01  max_mem: 21304M
[02/24 19:48:49] d2.utils.events INFO:  eta: 0:14:04  iter: 3319  total_loss: 0.2649  loss_cls: 0.117  loss_box_reg: 0.148  time: 0.8749  last_time: 0.8826  data_time: 0.0609  last_data_time: 0.0655   lr: 0.01  max_mem: 21304M
[02/24 19:49:06] d2.utils.events INFO:  eta: 0:13:47  iter: 3339  total_loss: 0.2585  loss_cls: 0.1136  loss_box_reg: 0.148  time: 0.8749  last_time: 0.8849  data_time: 0.0593  last_data_time: 0.0663   lr: 0.01  max_mem: 21304M
[02/24 19:49:23] d2.utils.events INFO:  eta: 0:13:29  iter: 3359  total_loss: 0.2656  loss_cls: 0.119  loss_box_reg: 0.1468  time: 0.8748  last_time: 0.8851  data_time: 0.0609  last_data_time: 0.0665   lr: 0.01  max_mem: 21304M
[02/24 19:49:41] d2.utils.events INFO:  eta: 0:13:11  iter: 3379  total_loss: 0.2648  loss_cls: 0.1143  loss_box_reg: 0.1469  time: 0.8748  last_time: 0.8760  data_time: 0.0614  last_data_time: 0.0573   lr: 0.01  max_mem: 21304M
[02/24 19:49:58] d2.utils.events INFO:  eta: 0:12:54  iter: 3399  total_loss: 0.2658  loss_cls: 0.1175  loss_box_reg: 0.1512  time: 0.8748  last_time: 0.8349  data_time: 0.0624  last_data_time: 0.0647   lr: 0.01  max_mem: 21304M
[02/24 19:50:16] d2.utils.events INFO:  eta: 0:12:36  iter: 3419  total_loss: 0.2645  loss_cls: 0.1165  loss_box_reg: 0.1496  time: 0.8748  last_time: 0.8815  data_time: 0.0624  last_data_time: 0.0642   lr: 0.01  max_mem: 21304M
[02/24 19:50:33] d2.utils.events INFO:  eta: 0:12:19  iter: 3439  total_loss: 0.2548  loss_cls: 0.1101  loss_box_reg: 0.1426  time: 0.8748  last_time: 0.8348  data_time: 0.0632  last_data_time: 0.0650   lr: 0.01  max_mem: 21304M
[02/24 19:50:51] d2.utils.events INFO:  eta: 0:12:01  iter: 3459  total_loss: 0.2633  loss_cls: 0.1145  loss_box_reg: 0.148  time: 0.8749  last_time: 0.8926  data_time: 0.0623  last_data_time: 0.0737   lr: 0.01  max_mem: 21304M
[02/24 19:51:09] d2.utils.events INFO:  eta: 0:11:44  iter: 3479  total_loss: 0.2635  loss_cls: 0.1156  loss_box_reg: 0.1491  time: 0.8749  last_time: 0.8842  data_time: 0.0619  last_data_time: 0.0653   lr: 0.01  max_mem: 21304M
[02/24 19:51:26] d2.utils.events INFO:  eta: 0:11:26  iter: 3499  total_loss: 0.2564  loss_cls: 0.1127  loss_box_reg: 0.1462  time: 0.8749  last_time: 0.8699  data_time: 0.0602  last_data_time: 0.0521   lr: 0.01  max_mem: 21304M
[02/24 19:51:44] d2.utils.events INFO:  eta: 0:11:09  iter: 3519  total_loss: 0.2592  loss_cls: 0.1152  loss_box_reg: 0.1436  time: 0.8749  last_time: 0.8750  data_time: 0.0627  last_data_time: 0.0564   lr: 0.01  max_mem: 21304M
[02/24 19:52:01] d2.utils.events INFO:  eta: 0:10:51  iter: 3539  total_loss: 0.2687  loss_cls: 0.1163  loss_box_reg: 0.1498  time: 0.8749  last_time: 0.8710  data_time: 0.0613  last_data_time: 0.0532   lr: 0.01  max_mem: 21304M
[02/24 19:52:19] d2.utils.events INFO:  eta: 0:10:33  iter: 3559  total_loss: 0.2578  loss_cls: 0.112  loss_box_reg: 0.1461  time: 0.8749  last_time: 0.8791  data_time: 0.0626  last_data_time: 0.0613   lr: 0.01  max_mem: 21304M
[02/24 19:52:36] d2.utils.events INFO:  eta: 0:10:16  iter: 3579  total_loss: 0.257  loss_cls: 0.1124  loss_box_reg: 0.144  time: 0.8749  last_time: 0.8873  data_time: 0.0622  last_data_time: 0.0685   lr: 0.01  max_mem: 21304M
[02/24 19:52:54] d2.utils.events INFO:  eta: 0:09:58  iter: 3599  total_loss: 0.249  loss_cls: 0.1076  loss_box_reg: 0.1433  time: 0.8749  last_time: 0.8348  data_time: 0.0619  last_data_time: 0.0649   lr: 0.01  max_mem: 21304M
[02/24 19:53:11] d2.utils.events INFO:  eta: 0:09:41  iter: 3619  total_loss: 0.2572  loss_cls: 0.1164  loss_box_reg: 0.1412  time: 0.8749  last_time: 0.8813  data_time: 0.0625  last_data_time: 0.0625   lr: 0.01  max_mem: 21304M
[02/24 19:53:29] d2.utils.events INFO:  eta: 0:09:23  iter: 3639  total_loss: 0.261  loss_cls: 0.1136  loss_box_reg: 0.1439  time: 0.8749  last_time: 0.8769  data_time: 0.0617  last_data_time: 0.0597   lr: 0.01  max_mem: 21304M
[02/24 19:53:46] d2.utils.events INFO:  eta: 0:09:06  iter: 3659  total_loss: 0.254  loss_cls: 0.1107  loss_box_reg: 0.1443  time: 0.8749  last_time: 0.8710  data_time: 0.0613  last_data_time: 0.0532   lr: 0.01  max_mem: 21304M
[02/24 19:54:04] d2.utils.events INFO:  eta: 0:08:48  iter: 3679  total_loss: 0.27  loss_cls: 0.1149  loss_box_reg: 0.1505  time: 0.8749  last_time: 0.8795  data_time: 0.0616  last_data_time: 0.0615   lr: 0.01  max_mem: 21304M
[02/24 19:54:21] d2.utils.events INFO:  eta: 0:08:31  iter: 3699  total_loss: 0.245  loss_cls: 0.107  loss_box_reg: 0.1385  time: 0.8749  last_time: 0.8816  data_time: 0.0579  last_data_time: 0.0634   lr: 0.01  max_mem: 21304M
[02/24 19:54:39] d2.utils.events INFO:  eta: 0:08:13  iter: 3719  total_loss: 0.2635  loss_cls: 0.1156  loss_box_reg: 0.1483  time: 0.8749  last_time: 0.8833  data_time: 0.0625  last_data_time: 0.0656   lr: 0.01  max_mem: 21304M
[02/24 19:54:56] d2.utils.events INFO:  eta: 0:07:56  iter: 3739  total_loss: 0.255  loss_cls: 0.1101  loss_box_reg: 0.146  time: 0.8749  last_time: 0.8761  data_time: 0.0605  last_data_time: 0.0590   lr: 0.01  max_mem: 21304M
[02/24 19:55:14] d2.utils.events INFO:  eta: 0:07:38  iter: 3759  total_loss: 0.2648  loss_cls: 0.1143  loss_box_reg: 0.1507  time: 0.8749  last_time: 0.8277  data_time: 0.0591  last_data_time: 0.0573   lr: 0.01  max_mem: 21304M
[02/24 19:55:31] d2.utils.events INFO:  eta: 0:07:21  iter: 3779  total_loss: 0.2562  loss_cls: 0.1129  loss_box_reg: 0.1415  time: 0.8748  last_time: 0.8971  data_time: 0.0607  last_data_time: 0.0791   lr: 0.01  max_mem: 21304M
[02/24 19:55:49] d2.utils.events INFO:  eta: 0:07:03  iter: 3799  total_loss: 0.2504  loss_cls: 0.1103  loss_box_reg: 0.1431  time: 0.8749  last_time: 0.8953  data_time: 0.0634  last_data_time: 0.0780   lr: 0.01  max_mem: 21304M
[02/24 19:56:06] d2.utils.events INFO:  eta: 0:06:46  iter: 3819  total_loss: 0.2507  loss_cls: 0.1084  loss_box_reg: 0.1416  time: 0.8749  last_time: 0.8738  data_time: 0.0633  last_data_time: 0.0563   lr: 0.01  max_mem: 21304M
[02/24 19:56:24] d2.utils.events INFO:  eta: 0:06:28  iter: 3839  total_loss: 0.2512  loss_cls: 0.107  loss_box_reg: 0.1439  time: 0.8749  last_time: 0.8861  data_time: 0.0642  last_data_time: 0.0679   lr: 0.01  max_mem: 21304M
[02/24 19:56:41] d2.utils.events INFO:  eta: 0:06:10  iter: 3859  total_loss: 0.2464  loss_cls: 0.1026  loss_box_reg: 0.1418  time: 0.8749  last_time: 0.8790  data_time: 0.0604  last_data_time: 0.0609   lr: 0.01  max_mem: 21304M
[02/24 19:56:59] d2.utils.events INFO:  eta: 0:05:53  iter: 3879  total_loss: 0.2448  loss_cls: 0.1042  loss_box_reg: 0.1414  time: 0.8749  last_time: 0.8793  data_time: 0.0603  last_data_time: 0.0619   lr: 0.01  max_mem: 21304M
[02/24 19:57:16] d2.utils.events INFO:  eta: 0:05:35  iter: 3899  total_loss: 0.2561  loss_cls: 0.1122  loss_box_reg: 0.1452  time: 0.8749  last_time: 0.8877  data_time: 0.0634  last_data_time: 0.0693   lr: 0.01  max_mem: 21304M
[02/24 19:57:34] d2.utils.events INFO:  eta: 0:05:18  iter: 3919  total_loss: 0.2491  loss_cls: 0.1077  loss_box_reg: 0.1407  time: 0.8750  last_time: 0.8976  data_time: 0.0614  last_data_time: 0.0807   lr: 0.01  max_mem: 21304M
[02/24 19:57:52] d2.utils.events INFO:  eta: 0:05:00  iter: 3939  total_loss: 0.2512  loss_cls: 0.1051  loss_box_reg: 0.145  time: 0.8750  last_time: 0.8734  data_time: 0.0640  last_data_time: 0.0564   lr: 0.01  max_mem: 21304M
[02/24 19:58:09] d2.utils.events INFO:  eta: 0:04:43  iter: 3959  total_loss: 0.258  loss_cls: 0.1096  loss_box_reg: 0.1468  time: 0.8750  last_time: 0.8749  data_time: 0.0606  last_data_time: 0.0575   lr: 0.01  max_mem: 21304M
[02/24 19:58:27] d2.utils.events INFO:  eta: 0:04:25  iter: 3979  total_loss: 0.2471  loss_cls: 0.1075  loss_box_reg: 0.1395  time: 0.8750  last_time: 0.8835  data_time: 0.0643  last_data_time: 0.0663   lr: 0.01  max_mem: 21304M
[02/24 19:58:44] d2.utils.events INFO:  eta: 0:04:08  iter: 3999  total_loss: 0.2531  loss_cls: 0.108  loss_box_reg: 0.1431  time: 0.8750  last_time: 0.8347  data_time: 0.0616  last_data_time: 0.0654   lr: 0.01  max_mem: 21304M
[02/24 19:59:02] d2.utils.events INFO:  eta: 0:03:50  iter: 4019  total_loss: 0.2444  loss_cls: 0.1021  loss_box_reg: 0.1415  time: 0.8750  last_time: 0.8846  data_time: 0.0614  last_data_time: 0.0682   lr: 0.01  max_mem: 21304M
[02/24 19:59:19] d2.utils.events INFO:  eta: 0:03:33  iter: 4039  total_loss: 0.2502  loss_cls: 0.1069  loss_box_reg: 0.1418  time: 0.8750  last_time: 0.8740  data_time: 0.0618  last_data_time: 0.0559   lr: 0.01  max_mem: 21304M
[02/24 19:59:37] d2.utils.events INFO:  eta: 0:03:15  iter: 4059  total_loss: 0.2562  loss_cls: 0.1072  loss_box_reg: 0.1485  time: 0.8750  last_time: 0.8761  data_time: 0.0600  last_data_time: 0.0583   lr: 0.01  max_mem: 21304M
[02/24 19:59:54] d2.utils.events INFO:  eta: 0:02:58  iter: 4079  total_loss: 0.2465  loss_cls: 0.1032  loss_box_reg: 0.142  time: 0.8750  last_time: 0.8723  data_time: 0.0602  last_data_time: 0.0544   lr: 0.01  max_mem: 21304M
[02/24 20:00:12] d2.utils.events INFO:  eta: 0:02:40  iter: 4099  total_loss: 0.2436  loss_cls: 0.1069  loss_box_reg: 0.14  time: 0.8750  last_time: 0.8760  data_time: 0.0577  last_data_time: 0.0583   lr: 0.01  max_mem: 21304M
[02/24 20:00:29] d2.utils.events INFO:  eta: 0:02:23  iter: 4119  total_loss: 0.2463  loss_cls: 0.1073  loss_box_reg: 0.1398  time: 0.8750  last_time: 0.8947  data_time: 0.0591  last_data_time: 0.0764   lr: 0.01  max_mem: 21304M
[02/24 20:00:47] d2.utils.events INFO:  eta: 0:02:05  iter: 4139  total_loss: 0.233  loss_cls: 0.09667  loss_box_reg: 0.1363  time: 0.8750  last_time: 0.8857  data_time: 0.0598  last_data_time: 0.0681   lr: 0.01  max_mem: 21304M
[02/24 20:01:04] d2.utils.events INFO:  eta: 0:01:47  iter: 4159  total_loss: 0.2365  loss_cls: 0.09953  loss_box_reg: 0.1379  time: 0.8750  last_time: 0.8765  data_time: 0.0581  last_data_time: 0.0594   lr: 0.01  max_mem: 21304M
[02/24 20:01:22] d2.utils.events INFO:  eta: 0:01:30  iter: 4179  total_loss: 0.2404  loss_cls: 0.1032  loss_box_reg: 0.1386  time: 0.8750  last_time: 0.8946  data_time: 0.0616  last_data_time: 0.0773   lr: 0.01  max_mem: 21304M
[02/24 20:01:39] d2.utils.events INFO:  eta: 0:01:12  iter: 4199  total_loss: 0.24  loss_cls: 0.1017  loss_box_reg: 0.1376  time: 0.8750  last_time: 0.8695  data_time: 0.0583  last_data_time: 0.0521   lr: 0.01  max_mem: 21304M
[02/24 20:01:57] d2.utils.events INFO:  eta: 0:00:55  iter: 4219  total_loss: 0.2419  loss_cls: 0.104  loss_box_reg: 0.1383  time: 0.8750  last_time: 0.8787  data_time: 0.0627  last_data_time: 0.0600   lr: 0.01  max_mem: 21304M
[02/24 20:02:14] d2.utils.events INFO:  eta: 0:00:37  iter: 4239  total_loss: 0.2415  loss_cls: 0.102  loss_box_reg: 0.14  time: 0.8750  last_time: 0.8730  data_time: 0.0592  last_data_time: 0.0552   lr: 0.01  max_mem: 21304M
[02/24 20:02:32] d2.utils.events INFO:  eta: 0:00:20  iter: 4259  total_loss: 0.2424  loss_cls: 0.1041  loss_box_reg: 0.1379  time: 0.8750  last_time: 0.8764  data_time: 0.0606  last_data_time: 0.0557   lr: 0.01  max_mem: 21304M
[02/24 20:02:49] d2.utils.events INFO:  eta: 0:00:02  iter: 4279  total_loss: 0.2337  loss_cls: 0.09926  loss_box_reg: 0.1361  time: 0.8750  last_time: 0.8760  data_time: 0.0614  last_data_time: 0.0598   lr: 0.01  max_mem: 21304M
[02/24 20:02:50] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/model_0004280.pth
[02/24 20:02:52] fvcore.common.checkpoint INFO: Saving checkpoint to ./output/model_final.pth
[02/24 20:02:53] d2.utils.events INFO:  eta: 0:00:00  iter: 4282  total_loss: 0.241  loss_cls: 0.1031  loss_box_reg: 0.1387  time: 0.8750  last_time: 0.8692  data_time: 0.0593  last_data_time: 0.0500   lr: 0.01  max_mem: 21304M
[02/24 20:02:53] d2.engine.hooks INFO: Overall training speed: 4281 iterations in 1:02:26 (0.8750 s / it)
[02/24 20:02:53] d2.engine.hooks INFO: Total training time: 1:02:39 (0:00:13 on hooks)
[02/24 20:02:53] d2.data.datasets.coco WARNING: 
Category ids in annotations are not in [1, #categories]! We'll apply a mapping for you.

[02/24 20:02:53] d2.data.datasets.coco INFO: Loaded 160 images in COCO format from /media/nahyun/HDD//data_100/instances_test.json
[02/24 20:02:53] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[02/24 20:02:53] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[02/24 20:02:53] d2.data.common INFO: Serializing 160 elements to byte tensors and concatenating them all ...
[02/24 20:02:53] d2.data.common INFO: Serialized dataset takes 0.44 MiB
[02/24 20:02:53] d2.evaluation.evaluator INFO: Start inference on 160 batches
[02/24 20:02:53] d2.evaluation.evaluator INFO: Inference done 11/160. Dataloading: 0.0005 s/iter. Inference: 0.0288 s/iter. Eval: 0.0069 s/iter. Total: 0.0363 s/iter. ETA=0:00:05
[02/24 20:02:58] d2.evaluation.evaluator INFO: Total inference time: 0:00:04.638922 (0.029929 s / iter per device, on 1 devices)
[02/24 20:02:58] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:04 (0.028602 s / iter per device, on 1 devices)
[02/24 20:02:58] d2.evaluation.coco_evaluation INFO: Preparing results for COCO format ...
[02/24 20:02:58] d2.evaluation.coco_evaluation INFO: Saving results to ./output/inference/coco_instances_results.json
[02/24 20:02:58] d2.evaluation.coco_evaluation INFO: Evaluating predictions with unofficial COCO API...
[02/24 20:02:58] d2.evaluation.fast_eval_api INFO: Evaluate annotation type *bbox*
[02/24 20:02:58] d2.evaluation.fast_eval_api INFO: COCOeval_opt.evaluate() finished in 0.23 seconds.
[02/24 20:02:58] d2.evaluation.fast_eval_api INFO: Accumulating evaluation results...
[02/24 20:02:58] d2.evaluation.fast_eval_api INFO: COCOeval_opt.accumulate() finished in 0.11 seconds.
[02/24 20:02:58] d2.evaluation.coco_evaluation INFO: Evaluation results for bbox: 
|   AP   |  AP50  |  AP75  |  APs  |  APm   |  APl   |
|:------:|:------:|:------:|:-----:|:------:|:------:|
| 12.727 | 21.252 | 13.450 | 6.312 | 20.946 | 26.049 |
[02/24 20:02:58] d2.evaluation.coco_evaluation INFO: Per-category bbox AP: 
| category                   | AP     | category                     | AP     | category                     | AP     |
|:---------------------------|:-------|:-----------------------------|:-------|:-----------------------------|:-------|
| 000_aveda_shampoo          | 13.256 | 001_binder_clips_median      | 20.184 | 002_binder_clips_small       | 18.527 |
| 003_bombik_bucket          | 5.371  | 004_bonne_maman_blueberry    | 0.407  | 005_bonne_maman_raspberry    | 2.121  |
| 006_bonne_maman_strawberry | 0.124  | 007_costa_caramel            | 23.185 | 008_essential_oil_bergamot   | 22.896 |
| 009_garlic_toast_spread    | 4.059  | 010_handcream_avocado        | 0.555  | 011_hb_calcium               | 16.007 |
| 012_hb_grapeseed           | 10.595 | 013_hb_marine_collagen       | 9.363  | 014_hellmanns_mayonnaise     | 7.022  |
| 015_illy_blend             | 2.940  | 016_japanese_finger_cookies  | 5.404  | 017_john_west_canned_tuna    | 5.698  |
| 018_kerastase_shampoo      | 6.327  | 019_kiehls_facial_cream      | 21.033 | 020_kiihne_balsamic          | 0.129  |
| 021_kiihne_honey_mustard   | 13.442 | 022_lindor_matcha            | 20.731 | 023_lindor_salted_caramel    | 30.941 |
| 024_lush_mask              | 67.720 | 025_pasta_sauce_black_pepper | 0.479  | 026_pasta_sauce_tomato       | 6.292  |
| 027_pepsi                  | 43.096 | 028_portable_yogurt_machine  | 0.000  | 029_selfile_stick            | 1.311  |
| 030_sour_lemon_drops       | 5.360  | 031_sticky_notes             | 18.586 | 032_stridex_green            | 36.984 |
| 033_thermos_flask_cream    | 35.814 | 034_thermos_flask_muji       | 1.226  | 035_thermos_flask_sliver     | 1.375  |
| 036_tragata_olive_oil      | 2.735  | 037_tulip_luncheon_meat      | 14.069 | 038_unicharm_cotton_pad      | 41.019 |
| 039_vinda_tissue           | 29.714 | 040_wrigley_doublemint_gum   | 1.005  | 041_baseball_cap_black       | 9.279  |
| 042_baseball_cap_pink      | 6.658  | 043_bfe_facial_mask          | 28.986 | 044_corgi_doll               | 5.238  |
| 045_dinosaur_doll          | 16.707 | 046_geo_mocha                | 5.325  | 047_geo_roast_charcoal       | 1.197  |
| 048_instant_noodle_black   | 5.897  | 049_instant_noodle_red       | 15.423 | 050_nabati_cheese_wafer      | 37.106 |
| 051_truffettes             | 5.979  | 052_acnes_cream              | 14.810 | 053_aveda_conditioner        | 29.506 |
| 054_banana_milk_drink      | 4.906  | 055_candle_beast             | 31.864 | 056_china_persimmon          | 8.460  |
| 057_danisa_butter_cookies  | 2.460  | 058_effaclar_duo             | 9.769  | 059_evelom_cleanser          | 1.940  |
| 060_glasses_box_blone      | 2.800  | 061_handcream_iris           | 0.000  | 062_handcream_lavender       | 0.000  |
| 063_handcream_rosewater    | 1.180  | 064_handcream_summer_hill    | 0.000  | 065_hr_serum                 | 2.519  |
| 066_japanese_chocolate     | 26.550 | 067_kerastase_hair_treatment | 8.563  | 068_kiehls_serum             | 19.366 |
| 069_korean_beef_marinade   | 18.676 | 070_korean_doenjang          | 13.800 | 071_korean_gochujang         | 0.099  |
| 072_korean_ssamjang        | 4.006  | 073_loccitane_soap           | 16.150 | 074_marvis_toothpaste_purple | 38.863 |
| 075_mouse_thinkpad         | 5.664  | 076_oatly_chocolate          | 11.135 | 077_oatly_original           | 15.771 |
| 078_ousa_grated_cheese     | 9.707  | 079_polaroid_film            | 0.217  | 080_skinceuticals_be         | 59.080 |
| 081_skinceuticals_cf       | 17.597 | 082_skinceuticals_phyto      | 14.984 | 083_stapler_black            | 8.059  |
| 084_stapler_blue           | 16.717 | 085_sunscreen_blue           | 0.267  | 086_tempo_pocket_tissue      | 1.251  |
| 087_thermos_flask_purple   | 35.240 | 088_uha_matcha               | 14.132 | 089_urban_decay_spray        | 9.294  |
| 090_vitaboost_multivitamin | 3.578  | 091_watercolor_penbox        | 0.009  | 092_youthlt_bilberry_complex | 0.000  |
| 093_daiso_mod_remover      | 14.090 | 094_kaneyo_kitchen_bleach    | 13.094 | 095_lays_chip_bag_blue       | 6.813  |
| 096_lays_chip_bag_green    | 13.306 | 097_lays_chip_tube_auburn    | 9.838  | 098_lays_chip_tube_green     | 31.638 |
| 099_mug_blue               | 0.000  |                              |        |                              |        |
[02/24 20:02:58] d2.engine.defaults INFO: Evaluation results for retinanet_test in csv format:
[02/24 20:02:58] d2.evaluation.testing INFO: copypaste: Task: bbox
[02/24 20:02:58] d2.evaluation.testing INFO: copypaste: AP,AP50,AP75,APs,APm,APl
[02/24 20:02:58] d2.evaluation.testing INFO: copypaste: 12.7266,21.2515,13.4503,6.3125,20.9460,26.0487
